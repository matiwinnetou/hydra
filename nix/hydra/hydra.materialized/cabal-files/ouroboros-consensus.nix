{ system
  , compiler
  , flags
  , pkgs
  , hsPkgs
  , pkgconfPkgs
  , errorHandler
  , config
  , ... }:
  ({
    flags = { asserts = false; };
    package = {
      specVersion = "1.10";
      identifier = { name = "ouroboros-consensus"; version = "0.1.0.1"; };
      license = "Apache-2.0";
      copyright = "2019 Input Output (Hong Kong) Ltd.";
      maintainer = "operations@iohk.io";
      author = "IOHK Engineering Team";
      homepage = "";
      url = "";
      synopsis = "Consensus layer for the Ouroboros blockchain protocol";
      description = "";
      buildType = "Simple";
      };
    components = {
      "library" = {
        depends = [
          (hsPkgs."base" or (errorHandler.buildDepError "base"))
          (hsPkgs."base-deriving-via" or (errorHandler.buildDepError "base-deriving-via"))
          (hsPkgs."base16-bytestring" or (errorHandler.buildDepError "base16-bytestring"))
          (hsPkgs."bimap" or (errorHandler.buildDepError "bimap"))
          (hsPkgs."binary" or (errorHandler.buildDepError "binary"))
          (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
          (hsPkgs."cardano-binary" or (errorHandler.buildDepError "cardano-binary"))
          (hsPkgs."cardano-crypto-class" or (errorHandler.buildDepError "cardano-crypto-class"))
          (hsPkgs."cardano-prelude" or (errorHandler.buildDepError "cardano-prelude"))
          (hsPkgs."cardano-slotting" or (errorHandler.buildDepError "cardano-slotting"))
          (hsPkgs."cborg" or (errorHandler.buildDepError "cborg"))
          (hsPkgs."containers" or (errorHandler.buildDepError "containers"))
          (hsPkgs."contra-tracer" or (errorHandler.buildDepError "contra-tracer"))
          (hsPkgs."deepseq" or (errorHandler.buildDepError "deepseq"))
          (hsPkgs."digest" or (errorHandler.buildDepError "digest"))
          (hsPkgs."directory" or (errorHandler.buildDepError "directory"))
          (hsPkgs."filelock" or (errorHandler.buildDepError "filelock"))
          (hsPkgs."filepath" or (errorHandler.buildDepError "filepath"))
          (hsPkgs."hashable" or (errorHandler.buildDepError "hashable"))
          (hsPkgs."measures" or (errorHandler.buildDepError "measures"))
          (hsPkgs."mtl" or (errorHandler.buildDepError "mtl"))
          (hsPkgs."nothunks" or (errorHandler.buildDepError "nothunks"))
          (hsPkgs."psqueues" or (errorHandler.buildDepError "psqueues"))
          (hsPkgs."random" or (errorHandler.buildDepError "random"))
          (hsPkgs."quiet" or (errorHandler.buildDepError "quiet"))
          (hsPkgs."semialign" or (errorHandler.buildDepError "semialign"))
          (hsPkgs."serialise" or (errorHandler.buildDepError "serialise"))
          (hsPkgs."sop-core" or (errorHandler.buildDepError "sop-core"))
          (hsPkgs."stm" or (errorHandler.buildDepError "stm"))
          (hsPkgs."streaming" or (errorHandler.buildDepError "streaming"))
          (hsPkgs."strict-containers" or (errorHandler.buildDepError "strict-containers"))
          (hsPkgs."text" or (errorHandler.buildDepError "text"))
          (hsPkgs."these" or (errorHandler.buildDepError "these"))
          (hsPkgs."time" or (errorHandler.buildDepError "time"))
          (hsPkgs."transformers" or (errorHandler.buildDepError "transformers"))
          (hsPkgs."vector" or (errorHandler.buildDepError "vector"))
          (hsPkgs."io-classes" or (errorHandler.buildDepError "io-classes"))
          (hsPkgs."typed-protocols" or (errorHandler.buildDepError "typed-protocols"))
          (hsPkgs."network-mux" or (errorHandler.buildDepError "network-mux"))
          (hsPkgs."ouroboros-network-framework" or (errorHandler.buildDepError "ouroboros-network-framework"))
          (hsPkgs."ouroboros-network" or (errorHandler.buildDepError "ouroboros-network"))
          (hsPkgs."strict-stm" or (errorHandler.buildDepError "strict-stm"))
          ] ++ (if system.isWindows
          then [ (hsPkgs."Win32" or (errorHandler.buildDepError "Win32")) ]
          else [
            (hsPkgs."unix" or (errorHandler.buildDepError "unix"))
            (hsPkgs."unix-bytestring" or (errorHandler.buildDepError "unix-bytestring"))
            ]);
        buildable = true;
        };
      };
    } // {
    src = (pkgs.lib).mkDefault (pkgs.fetchurl {
      url = "https://input-output-hk.github.io/cardano-haskell-packages/package/ouroboros-consensus-0.1.0.1.tar.gz";
      sha256 = "574f2ab9be8fa283994901ee93bef648214a1e0c76891153707ee635615bd60a";
      });
    }) // {
    package-description-override = "name:                ouroboros-consensus\nversion:             0.1.0.1\nsynopsis:            Consensus layer for the Ouroboros blockchain protocol\n-- description:\nlicense:             Apache-2.0\nlicense-files:\n  LICENSE\n  NOTICE\ncopyright:           2019 Input Output (Hong Kong) Ltd.\nauthor:              IOHK Engineering Team\nmaintainer:          operations@iohk.io\ncategory:            Network\nbuild-type:          Simple\ncabal-version:       >=1.10\n\nsource-repository head\n  type:     git\n  location: https://github.com/input-output-hk/ouroboros-network\n\nflag asserts\n  description: Enable assertions\n  manual:      False\n  default:     False\n\nlibrary\n  hs-source-dirs:      src\n\n  if os(windows)\n     hs-source-dirs:   src-win32\n  else\n     hs-source-dirs:   src-unix\n\n  exposed-modules:\n                       Ouroboros.Consensus.Block\n                       Ouroboros.Consensus.Block.Abstract\n                       Ouroboros.Consensus.Block.EBB\n                       Ouroboros.Consensus.Block.Forging\n                       Ouroboros.Consensus.Block.NestedContent\n                       Ouroboros.Consensus.Block.RealPoint\n                       Ouroboros.Consensus.Block.SupportsMetrics\n                       Ouroboros.Consensus.Block.SupportsProtocol\n                       Ouroboros.Consensus.BlockchainTime\n                       Ouroboros.Consensus.BlockchainTime.API\n                       Ouroboros.Consensus.BlockchainTime.WallClock.Default\n                       Ouroboros.Consensus.BlockchainTime.WallClock.HardFork\n                       Ouroboros.Consensus.BlockchainTime.WallClock.Simple\n                       Ouroboros.Consensus.BlockchainTime.WallClock.Types\n                       Ouroboros.Consensus.BlockchainTime.WallClock.Util\n                       Ouroboros.Consensus.Config\n                       Ouroboros.Consensus.Config.SecurityParam\n                       Ouroboros.Consensus.Config.SupportsNode\n                       Ouroboros.Consensus.Forecast\n                       Ouroboros.Consensus.Fragment.Diff\n                       Ouroboros.Consensus.Fragment.InFuture\n                       Ouroboros.Consensus.Fragment.Validated\n                       Ouroboros.Consensus.Fragment.ValidatedDiff\n                       Ouroboros.Consensus.HardFork.Abstract\n                       Ouroboros.Consensus.HardFork.Combinator\n                       Ouroboros.Consensus.HardFork.Combinator.Abstract\n                       Ouroboros.Consensus.HardFork.Combinator.Abstract.CanHardFork\n                       Ouroboros.Consensus.HardFork.Combinator.Abstract.NoHardForks\n                       Ouroboros.Consensus.HardFork.Combinator.Abstract.SingleEraBlock\n                       Ouroboros.Consensus.HardFork.Combinator.AcrossEras\n                       Ouroboros.Consensus.HardFork.Combinator.Basics\n                       Ouroboros.Consensus.HardFork.Combinator.Block\n                       Ouroboros.Consensus.HardFork.Combinator.Compat\n                       Ouroboros.Consensus.HardFork.Combinator.Condense\n                       Ouroboros.Consensus.HardFork.Combinator.Degenerate\n                       Ouroboros.Consensus.HardFork.Combinator.Embed.Binary\n                       Ouroboros.Consensus.HardFork.Combinator.Embed.Nary\n                       Ouroboros.Consensus.HardFork.Combinator.Embed.Unary\n                       Ouroboros.Consensus.HardFork.Combinator.Forging\n                       Ouroboros.Consensus.HardFork.Combinator.Info\n                       Ouroboros.Consensus.HardFork.Combinator.InjectTxs\n                       Ouroboros.Consensus.HardFork.Combinator.Ledger\n                       Ouroboros.Consensus.HardFork.Combinator.Ledger.CommonProtocolParams\n                       Ouroboros.Consensus.HardFork.Combinator.Ledger.PeerSelection\n                       Ouroboros.Consensus.HardFork.Combinator.Ledger.Query\n                       Ouroboros.Consensus.HardFork.Combinator.Mempool\n                       Ouroboros.Consensus.HardFork.Combinator.Node\n                       Ouroboros.Consensus.HardFork.Combinator.Node.InitStorage\n                       Ouroboros.Consensus.HardFork.Combinator.Node.Metrics\n                       Ouroboros.Consensus.HardFork.Combinator.PartialConfig\n                       Ouroboros.Consensus.HardFork.Combinator.Protocol\n                       Ouroboros.Consensus.HardFork.Combinator.Protocol.ChainSel\n                       Ouroboros.Consensus.HardFork.Combinator.Protocol.LedgerView\n                       Ouroboros.Consensus.HardFork.Combinator.Serialisation\n                       Ouroboros.Consensus.HardFork.Combinator.Serialisation.Common\n                       Ouroboros.Consensus.HardFork.Combinator.Serialisation.SerialiseDisk\n                       Ouroboros.Consensus.HardFork.Combinator.Serialisation.SerialiseNodeToClient\n                       Ouroboros.Consensus.HardFork.Combinator.Serialisation.SerialiseNodeToNode\n                       Ouroboros.Consensus.HardFork.Combinator.State\n                       Ouroboros.Consensus.HardFork.Combinator.State.Infra\n                       Ouroboros.Consensus.HardFork.Combinator.State.Instances\n                       Ouroboros.Consensus.HardFork.Combinator.State.Lift\n                       Ouroboros.Consensus.HardFork.Combinator.State.Types\n                       Ouroboros.Consensus.HardFork.Combinator.Translation\n                       Ouroboros.Consensus.HardFork.Combinator.Util.DerivingVia\n                       Ouroboros.Consensus.HardFork.Combinator.Util.Functors\n                       Ouroboros.Consensus.HardFork.Combinator.Util.InPairs\n                       Ouroboros.Consensus.HardFork.Combinator.Util.Match\n                       Ouroboros.Consensus.HardFork.Combinator.Util.Tails\n                       Ouroboros.Consensus.HardFork.Combinator.Util.Telescope\n                       Ouroboros.Consensus.HardFork.History\n                       Ouroboros.Consensus.HardFork.History.Caching\n                       Ouroboros.Consensus.HardFork.History.EpochInfo\n                       Ouroboros.Consensus.HardFork.History.EraParams\n                       Ouroboros.Consensus.HardFork.History.Qry\n                       Ouroboros.Consensus.HardFork.History.Summary\n                       Ouroboros.Consensus.HardFork.History.Util\n                       Ouroboros.Consensus.HardFork.Simple\n                       Ouroboros.Consensus.HeaderStateHistory\n                       Ouroboros.Consensus.HeaderValidation\n                       Ouroboros.Consensus.Ledger.Abstract\n                       Ouroboros.Consensus.Ledger.Basics\n                       Ouroboros.Consensus.Ledger.CommonProtocolParams\n                       Ouroboros.Consensus.Ledger.Dual\n                       Ouroboros.Consensus.Ledger.Extended\n                       Ouroboros.Consensus.Ledger.Inspect\n                       Ouroboros.Consensus.Ledger.Query\n                       Ouroboros.Consensus.Ledger.Query.Version\n                       Ouroboros.Consensus.Ledger.SupportsMempool\n                       Ouroboros.Consensus.Ledger.SupportsPeerSelection\n                       Ouroboros.Consensus.Ledger.SupportsProtocol\n                       Ouroboros.Consensus.Mempool\n                       Ouroboros.Consensus.Mempool.API\n                       Ouroboros.Consensus.Mempool.Impl\n                       Ouroboros.Consensus.Mempool.Impl.Pure\n                       Ouroboros.Consensus.Mempool.Impl.Types\n                       Ouroboros.Consensus.Mempool.TxLimits\n                       Ouroboros.Consensus.Mempool.TxSeq\n                       Ouroboros.Consensus.MiniProtocol.BlockFetch.Server\n                       Ouroboros.Consensus.MiniProtocol.ChainSync.Client\n                       Ouroboros.Consensus.MiniProtocol.ChainSync.Server\n                       Ouroboros.Consensus.MiniProtocol.LocalStateQuery.Server\n                       Ouroboros.Consensus.MiniProtocol.LocalTxSubmission.Server\n                       Ouroboros.Consensus.MiniProtocol.LocalTxMonitor.Server\n                       Ouroboros.Consensus.Network.NodeToClient\n                       Ouroboros.Consensus.Network.NodeToNode\n                       Ouroboros.Consensus.Node\n                       Ouroboros.Consensus.Node.DbLock\n                       Ouroboros.Consensus.Node.DbMarker\n                       Ouroboros.Consensus.Node.ErrorPolicy\n                       Ouroboros.Consensus.Node.RethrowPolicy\n                       Ouroboros.Consensus.Node.Exit\n                       Ouroboros.Consensus.NodeId\n                       Ouroboros.Consensus.NodeKernel\n                       Ouroboros.Consensus.Node.InitStorage\n                       Ouroboros.Consensus.Node.NetworkProtocolVersion\n                       Ouroboros.Consensus.Node.ProtocolInfo\n                       Ouroboros.Consensus.Node.Recovery\n                       Ouroboros.Consensus.Node.Run\n                       Ouroboros.Consensus.Node.Serialisation\n                       Ouroboros.Consensus.Node.Tracers\n                       Ouroboros.Consensus.Protocol.Abstract\n                       Ouroboros.Consensus.Protocol.BFT\n                       Ouroboros.Consensus.Protocol.LeaderSchedule\n                       Ouroboros.Consensus.Protocol.MockChainSel\n                       Ouroboros.Consensus.Protocol.ModChainSel\n                       Ouroboros.Consensus.Protocol.PBFT\n                       Ouroboros.Consensus.Protocol.PBFT.Crypto\n                       Ouroboros.Consensus.Protocol.PBFT.State\n                       Ouroboros.Consensus.Protocol.Signed\n                       Ouroboros.Consensus.Ticked\n                       Ouroboros.Consensus.TypeFamilyWrappers\n                       Ouroboros.Consensus.Util\n                       Ouroboros.Consensus.Util.AnchoredFragment\n                       Ouroboros.Consensus.Util.Args\n                       Ouroboros.Consensus.Util.Assert\n                       Ouroboros.Consensus.Util.CallStack\n                       Ouroboros.Consensus.Util.CBOR\n                       Ouroboros.Consensus.Util.Condense\n                       Ouroboros.Consensus.Util.Counting\n                       Ouroboros.Consensus.Util.DepPair\n                       Ouroboros.Consensus.Util.EarlyExit\n                       Ouroboros.Consensus.Util.FileLock\n                       Ouroboros.Consensus.Util.Enclose\n                       Ouroboros.Consensus.Util.HList\n                       Ouroboros.Consensus.Util.IOLike\n                       Ouroboros.Consensus.Util.MonadSTM.NormalForm\n                       Ouroboros.Consensus.Util.MonadSTM.RAWLock\n                       Ouroboros.Consensus.Util.MonadSTM.StrictMVar\n                       Ouroboros.Consensus.Util.OptNP\n                       Ouroboros.Consensus.Util.Orphans\n                       Ouroboros.Consensus.Util.RedundantConstraints\n                       Ouroboros.Consensus.Util.ResourceRegistry\n                       Ouroboros.Consensus.Util.Singletons\n                       Ouroboros.Consensus.Util.SOP\n                       Ouroboros.Consensus.Util.STM\n                       Ouroboros.Consensus.Util.TentativeState\n                       Ouroboros.Consensus.Util.Time\n                       Ouroboros.Consensus.Util.TraceSize\n                       Ouroboros.Consensus.Util.Versioned\n\n                       -- Storing things on disk\n                       Ouroboros.Consensus.Storage.ChainDB\n                       Ouroboros.Consensus.Storage.ChainDB.API\n                       Ouroboros.Consensus.Storage.ChainDB.API.Types.InvalidBlockPunishment\n                       Ouroboros.Consensus.Storage.ChainDB.Impl\n                       Ouroboros.Consensus.Storage.ChainDB.Impl.Args\n                       Ouroboros.Consensus.Storage.ChainDB.Impl.Background\n                       Ouroboros.Consensus.Storage.ChainDB.Impl.BlockCache\n                       Ouroboros.Consensus.Storage.ChainDB.Impl.ChainSel\n                       Ouroboros.Consensus.Storage.ChainDB.Impl.Follower\n                       Ouroboros.Consensus.Storage.ChainDB.Impl.Iterator\n                       Ouroboros.Consensus.Storage.ChainDB.Impl.LgrDB\n                       Ouroboros.Consensus.Storage.ChainDB.Impl.Paths\n                       Ouroboros.Consensus.Storage.ChainDB.Impl.Query\n                       Ouroboros.Consensus.Storage.ChainDB.Impl.Types\n                       Ouroboros.Consensus.Storage.ChainDB.Init\n                       Ouroboros.Consensus.Storage.Common\n                       Ouroboros.Consensus.Storage.FS.API\n                       Ouroboros.Consensus.Storage.FS.API.Types\n                       Ouroboros.Consensus.Storage.FS.CRC\n                       Ouroboros.Consensus.Storage.FS.Handle\n                       Ouroboros.Consensus.Storage.FS.IO\n                       Ouroboros.Consensus.Storage.IO\n                       Ouroboros.Consensus.Storage.ImmutableDB\n                       Ouroboros.Consensus.Storage.ImmutableDB.API\n                       Ouroboros.Consensus.Storage.ImmutableDB.Chunks\n                       Ouroboros.Consensus.Storage.ImmutableDB.Chunks.Internal\n                       Ouroboros.Consensus.Storage.ImmutableDB.Chunks.Layout\n                       Ouroboros.Consensus.Storage.ImmutableDB.Impl\n                       Ouroboros.Consensus.Storage.ImmutableDB.Impl.Index\n                       Ouroboros.Consensus.Storage.ImmutableDB.Impl.Index.Cache\n                       Ouroboros.Consensus.Storage.ImmutableDB.Impl.Index.Primary\n                       Ouroboros.Consensus.Storage.ImmutableDB.Impl.Index.Secondary\n                       Ouroboros.Consensus.Storage.ImmutableDB.Impl.Iterator\n                       Ouroboros.Consensus.Storage.ImmutableDB.Impl.Parser\n                       Ouroboros.Consensus.Storage.ImmutableDB.Impl.State\n                       Ouroboros.Consensus.Storage.ImmutableDB.Impl.Types\n                       Ouroboros.Consensus.Storage.ImmutableDB.Impl.Util\n                       Ouroboros.Consensus.Storage.ImmutableDB.Impl.Validation\n                       Ouroboros.Consensus.Storage.LedgerDB.DiskPolicy\n                       Ouroboros.Consensus.Storage.LedgerDB.InMemory\n                       Ouroboros.Consensus.Storage.LedgerDB.OnDisk\n                       Ouroboros.Consensus.Storage.LedgerDB.Types\n                       Ouroboros.Consensus.Storage.Serialisation\n                       Ouroboros.Consensus.Storage.VolatileDB\n                       Ouroboros.Consensus.Storage.VolatileDB.API\n                       Ouroboros.Consensus.Storage.VolatileDB.Impl\n                       Ouroboros.Consensus.Storage.VolatileDB.Impl.FileInfo\n                       Ouroboros.Consensus.Storage.VolatileDB.Impl.Index\n                       Ouroboros.Consensus.Storage.VolatileDB.Impl.Parser\n                       Ouroboros.Consensus.Storage.VolatileDB.Impl.State\n                       Ouroboros.Consensus.Storage.VolatileDB.Impl.Types\n                       Ouroboros.Consensus.Storage.VolatileDB.Impl.Util\n\n                       -- Strict wrapper around SOP\n                       Data.SOP.Strict\n  if os(windows)\n     exposed-modules:\n                       -- TODO Delete this module once all our projects have upgraded to at least\n                       -- ghc-8.10.7, but not before\n                       Ouroboros.Consensus.Storage.Seek\n\n  default-language:    Haskell2010\n  other-extensions:\n                       BangPatterns\n                       ConstraintKinds\n                       DataKinds\n                       DeriveAnyClass\n                       DeriveFunctor\n                       DeriveGeneric\n                       EmptyDataDecls\n                       FlexibleContexts\n                       FlexibleInstances\n                       FunctionalDependencies\n                       GADTs\n                       GeneralizedNewtypeDeriving\n                       KindSignatures\n                       LambdaCase\n                       MultiParamTypeClasses\n                       NamedFieldPuns\n                       OverloadedStrings\n                       PackageImports\n                       PolyKinds\n                       RankNTypes\n                       RecordWildCards\n                       ScopedTypeVariables\n                       StandaloneDeriving\n                       TemplateHaskell\n                       TupleSections\n                       TypeApplications\n                       TypeFamilies\n                       TypeFamilyDependencies\n                       TypeInType\n                       TypeOperators\n                       UndecidableInstances\n                       UndecidableSuperClasses\n                       ViewPatterns\n\n  build-depends:       base              >=4.9 && <4.15\n                     , base-deriving-via\n                     , base16-bytestring\n                     , bimap             >=0.3   && <0.5\n                     , binary            >=0.8   && <0.11\n                     , bytestring        >=0.10  && <0.11\n                     , cardano-binary\n                     , cardano-crypto-class\n                     , cardano-prelude\n                     , cardano-slotting\n                     , cborg             >=0.2.2 && <0.3\n                     , containers        >=0.5   && <0.7\n                     , contra-tracer\n                     , deepseq\n                     , digest\n                     , directory         >=1.3   && <1.4\n                     , filelock\n                     , filepath          >=1.4   && <1.5\n                     , hashable\n                     , measures\n                     , mtl               >=2.2   && <2.3\n                     , nothunks          >=0.1.2 && <0.2\n                     , psqueues          >=0.2.3 && <0.3\n                     , random\n                     , quiet             >=0.2   && <0.3\n                     , semialign         >=1.1\n                     , serialise         >=0.2   && <0.3\n                     , sop-core          >=0.5   && <0.6\n                     , stm               >=2.5   && <2.6\n                     , streaming\n                     , strict-containers\n                     , text              >=1.2   && <1.3\n                     , these             >=1.1   && <1.2\n                     , time\n                     , transformers\n                     , vector            >=0.12  && <0.13\n\n                     , io-classes        >=0.2   && <0.3\n                     , typed-protocols\n                     , network-mux\n                     , ouroboros-network-framework\n                     , ouroboros-network\n                     , strict-stm        >=0.1   && <0.2\n\n\n  if os(windows)\n     build-depends:    Win32            >= 2.6.1.0\n  else\n     build-depends:    unix\n                     , unix-bytestring\n\n  ghc-options:         -Wall\n                       -Wcompat\n                       -Wincomplete-uni-patterns\n                       -Wincomplete-record-updates\n                       -Wpartial-fields\n                       -Widentities\n                       -Wredundant-constraints\n                       -Wmissing-export-lists\n\n  if flag(asserts)\n    ghc-options:       -fno-ignore-asserts\n    cpp-options:       -DENABLE_ASSERTIONS\n";
    }