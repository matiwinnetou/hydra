{
  pkgs = hackage:
    {
      packages = {
        tasty-quickcheck.revision = import ./cabal-files/tasty-quickcheck.nix;
        optics-core.revision = import ./cabal-files/optics-core.nix;
        optics-core.flags.explicit-generic-labels = false;
        strict-containers.revision = import ./cabal-files/strict-containers.nix;
        strict-containers.flags.development = false;
        cardano-ledger-byron-test.revision = import ./cabal-files/cardano-ledger-byron-test.nix;
        lens-aeson.revision = import ./cabal-files/lens-aeson.nix;
        bytestring.revision = (((hackage.bytestring)."0.10.12.0").revisions).default;
        wl-pprint-annotated.revision = import ./cabal-files/wl-pprint-annotated.nix;
        async-timer.revision = import ./cabal-files/async-timer.nix;
        async-timer.flags.devel = false;
        mwc-random.revision = import ./cabal-files/mwc-random.nix;
        safe-exceptions.revision = import ./cabal-files/safe-exceptions.nix;
        http-client.revision = import ./cabal-files/http-client.nix;
        http-client.flags.network-uri = true;
        attoparsec-iso8601.revision = import ./cabal-files/attoparsec-iso8601.nix;
        attoparsec-iso8601.flags.fast = false;
        attoparsec-iso8601.flags.developer = false;
        fingertree.revision = import ./cabal-files/fingertree.nix;
        plutus-tx.revision = import ./cabal-files/plutus-tx.nix;
        cardano-ledger-byron.revision = import ./cabal-files/cardano-ledger-byron.nix;
        cardano-ledger-byron.flags.test-normal-form = false;
        safe.revision = import ./cabal-files/safe.nix;
        authenticate-oauth.revision = import ./cabal-files/authenticate-oauth.nix;
        yaml.revision = import ./cabal-files/yaml.nix;
        yaml.flags.no-examples = true;
        yaml.flags.no-exe = true;
        HUnit.revision = import ./cabal-files/HUnit.nix;
        cardano-data.revision = import ./cabal-files/cardano-data.nix;
        dlist.revision = import ./cabal-files/dlist.nix;
        dlist.flags.werror = false;
        colour.revision = import ./cabal-files/colour.nix;
        exceptions.revision = (((hackage.exceptions)."0.10.4").revisions).default;
        genvalidity-scientific.revision = import ./cabal-files/genvalidity-scientific.nix;
        concurrent-output.revision = import ./cabal-files/concurrent-output.nix;
        mtl-compat.revision = import ./cabal-files/mtl-compat.nix;
        mtl-compat.flags.two-point-two = false;
        mtl-compat.flags.two-point-one = false;
        directory.revision = (((hackage.directory)."1.3.6.0").revisions).default;
        th-lift-instances.revision = import ./cabal-files/th-lift-instances.nix;
        monad-supply.revision = import ./cabal-files/monad-supply.nix;
        http-api-data.revision = import ./cabal-files/http-api-data.nix;
        http-api-data.flags.use-text-show = false;
        bech32-th.revision = import ./cabal-files/bech32-th.nix;
        bech32-th.flags.release = false;
        QuickCheck-GenT.revision = import ./cabal-files/QuickCheck-GenT.nix;
        dependent-map.revision = import ./cabal-files/dependent-map.nix;
        tasty-hedgehog.revision = import ./cabal-files/tasty-hedgehog.nix;
        filepath.revision = (((hackage.filepath)."1.4.2.1").revisions).default;
        cardano-ledger-babbage-test.revision = import ./cabal-files/cardano-ledger-babbage-test.nix;
        measures.revision = import ./cabal-files/measures.nix;
        measures.flags.development = false;
        cardano-prelude.revision = import ./cabal-files/cardano-prelude.nix;
        cardano-prelude.flags.development = false;
        network.revision = import ./cabal-files/network.nix;
        network.flags.devel = false;
        optics-th.revision = import ./cabal-files/optics-th.nix;
        simple-sendfile.revision = import ./cabal-files/simple-sendfile.nix;
        simple-sendfile.flags.allow-bsd = true;
        mtl.revision = (((hackage.mtl)."2.2.2").revisions).default;
        ouroboros-consensus-cardano-test.revision = import ./cabal-files/ouroboros-consensus-cardano-test.nix;
        moo.revision = import ./cabal-files/moo.nix;
        cardano-ledger-pretty.revision = import ./cabal-files/cardano-ledger-pretty.nix;
        dependent-sum.revision = import ./cabal-files/dependent-sum.nix;
        base16.revision = import ./cabal-files/base16.nix;
        cardano-protocol-tpraos.revision = import ./cabal-files/cardano-protocol-tpraos.nix;
        wai-logger.revision = import ./cabal-files/wai-logger.nix;
        plutus-core.revision = import ./cabal-files/plutus-core.nix;
        http-types.revision = import ./cabal-files/http-types.nix;
        hspec-core.revision = import ./cabal-files/hspec-core.nix;
        vector-binary-instances.revision = import ./cabal-files/vector-binary-instances.nix;
        foundation.revision = import ./cabal-files/foundation.nix;
        foundation.flags.linktest = false;
        foundation.flags.bounds-check = false;
        foundation.flags.bench-all = false;
        foundation.flags.experimental = false;
        foundation.flags.doctest = false;
        foundation.flags.minimal-deps = false;
        bytestring-builder.revision = import ./cabal-files/bytestring-builder.nix;
        bytestring-builder.flags.bytestring_has_builder = true;
        plutus-ledger-api.revision = import ./cabal-files/plutus-ledger-api.nix;
        string-conversions.revision = import ./cabal-files/string-conversions.nix;
        cardano-prelude-test.revision = import ./cabal-files/cardano-prelude-test.nix;
        cardano-prelude-test.flags.development = false;
        canonical-json.revision = import ./cabal-files/canonical-json.nix;
        RSA.revision = import ./cabal-files/RSA.nix;
        zlib.revision = import ./cabal-files/zlib.nix;
        zlib.flags.non-blocking-ffi = false;
        zlib.flags.bundled-c-zlib = false;
        zlib.flags.pkg-config = false;
        graphviz.revision = import ./cabal-files/graphviz.nix;
        graphviz.flags.test-parsing = false;
        adjunctions.revision = import ./cabal-files/adjunctions.nix;
        vault.revision = import ./cabal-files/vault.nix;
        vault.flags.useghc = true;
        megaparsec.revision = import ./cabal-files/megaparsec.nix;
        megaparsec.flags.dev = false;
        tagged.revision = import ./cabal-files/tagged.nix;
        tagged.flags.deepseq = true;
        tagged.flags.transformers = true;
        unliftio.revision = import ./cabal-files/unliftio.nix;
        hspec-junit-formatter.revision = import ./cabal-files/hspec-junit-formatter.nix;
        data-fix.revision = import ./cabal-files/data-fix.nix;
        th-orphans.revision = import ./cabal-files/th-orphans.nix;
        sop-core.revision = import ./cabal-files/sop-core.nix;
        unix-compat.revision = import ./cabal-files/unix-compat.nix;
        unix-compat.flags.old-time = false;
        generics-sop.revision = import ./cabal-files/generics-sop.nix;
        cryptonite.revision = import ./cabal-files/cryptonite.nix;
        cryptonite.flags.check_alignment = false;
        cryptonite.flags.support_sse = false;
        cryptonite.flags.use_target_attributes = true;
        cryptonite.flags.support_deepseq = true;
        cryptonite.flags.support_rdrand = true;
        cryptonite.flags.old_toolchain_inliner = false;
        cryptonite.flags.integer-gmp = true;
        cryptonite.flags.support_pclmuldq = false;
        cryptonite.flags.support_aesni = true;
        statistics.revision = import ./cabal-files/statistics.nix;
        asn1-parse.revision = import ./cabal-files/asn1-parse.nix;
        ghc-prim.revision = (((hackage.ghc-prim)."0.6.1").revisions).default;
        cardano-ledger-shelley-ma-test.revision = import ./cabal-files/cardano-ledger-shelley-ma-test.nix;
        criterion-measurement.revision = import ./cabal-files/criterion-measurement.nix;
        criterion-measurement.flags.fast = false;
        fmlist.revision = import ./cabal-files/fmlist.nix;
        goblins.revision = import ./cabal-files/goblins.nix;
        goblins.flags.development = false;
        terminal-size.revision = import ./cabal-files/terminal-size.nix;
        transformers-base.revision = import ./cabal-files/transformers-base.nix;
        transformers-base.flags.orphaninstances = true;
        byron-spec-ledger.revision = import ./cabal-files/byron-spec-ledger.nix;
        time-manager.revision = import ./cabal-files/time-manager.nix;
        base16-bytestring.revision = import ./cabal-files/base16-bytestring.nix;
        unliftio-core.revision = import ./cabal-files/unliftio-core.nix;
        memory.revision = import ./cabal-files/memory.nix;
        memory.flags.support_deepseq = true;
        memory.flags.support_bytestring = true;
        openapi3.revision = import ./cabal-files/openapi3.nix;
        parser-combinators.revision = import ./cabal-files/parser-combinators.nix;
        parser-combinators.flags.dev = false;
        constraints.revision = import ./cabal-files/constraints.nix;
        http-client-tls.revision = import ./cabal-files/http-client-tls.nix;
        cardano-ledger-babbage.revision = import ./cabal-files/cardano-ledger-babbage.nix;
        cmdargs.revision = import ./cabal-files/cmdargs.nix;
        cmdargs.flags.quotation = true;
        cmdargs.flags.testprog = false;
        parsec.revision = (((hackage.parsec)."3.1.14.0").revisions).default;
        contra-tracer.revision = import ./cabal-files/contra-tracer.nix;
        small-steps-test.revision = import ./cabal-files/small-steps-test.nix;
        fast-logger.revision = import ./cabal-files/fast-logger.nix;
        dns.revision = import ./cabal-files/dns.nix;
        lens.revision = import ./cabal-files/lens.nix;
        lens.flags.test-templates = true;
        lens.flags.benchmark-uniplate = false;
        lens.flags.test-properties = true;
        lens.flags.j = false;
        lens.flags.trustworthy = true;
        lens.flags.test-hunit = true;
        lens.flags.dump-splices = false;
        lens.flags.inlining = true;
        tasty.revision = import ./cabal-files/tasty.nix;
        tasty.flags.clock = true;
        tasty.flags.unix = true;
        streaming-commons.revision = import ./cabal-files/streaming-commons.nix;
        streaming-commons.flags.use-bytestring-builder = false;
        x509.revision = import ./cabal-files/x509.nix;
        validation-selective.revision = import ./cabal-files/validation-selective.nix;
        js-chart.revision = import ./cabal-files/js-chart.nix;
        loop.revision = import ./cabal-files/loop.nix;
        some.revision = import ./cabal-files/some.nix;
        some.flags.newtype-unsafe = true;
        ghc-heap.revision = (((hackage.ghc-heap)."8.10.7").revisions).default;
        unix-time.revision = import ./cabal-files/unix-time.nix;
        hourglass.revision = import ./cabal-files/hourglass.nix;
        ouroboros-consensus-test.revision = import ./cabal-files/ouroboros-consensus-test.nix;
        bifunctors.revision = import ./cabal-files/bifunctors.nix;
        bifunctors.flags.tagged = true;
        bifunctors.flags.semigroups = true;
        integer-logarithms.revision = import ./cabal-files/integer-logarithms.nix;
        integer-logarithms.flags.check-bounds = false;
        integer-logarithms.flags.integer-gmp = true;
        cardano-ledger-shelley.revision = import ./cabal-files/cardano-ledger-shelley.nix;
        monoidal-synchronisation.revision = import ./cabal-files/monoidal-synchronisation.nix;
        hspec-discover.revision = import ./cabal-files/hspec-discover.nix;
        strict.revision = import ./cabal-files/strict.nix;
        strict.flags.assoc = true;
        strict-list.revision = import ./cabal-files/strict-list.nix;
        cardano-ledger-shelley-ma.revision = import ./cabal-files/cardano-ledger-shelley-ma.nix;
        ghc.revision = (((hackage.ghc)."8.10.7").revisions).default;
        x509-system.revision = import ./cabal-files/x509-system.nix;
        cardano-crypto-class.revision = import ./cabal-files/cardano-crypto-class.nix;
        cardano-crypto-class.flags.secp256k1-support = true;
        cardano-crypto-class.flags.development = false;
        base-compat.revision = import ./cabal-files/base-compat.nix;
        gitrev.revision = import ./cabal-files/gitrev.nix;
        binary-orphans.revision = import ./cabal-files/binary-orphans.nix;
        list-t.revision = import ./cabal-files/list-t.nix;
        aeson.revision = import ./cabal-files/aeson.nix;
        aeson.flags.bytestring-builder = false;
        aeson.flags.ordered-keymap = true;
        aeson.flags.cffi = false;
        recv.revision = import ./cabal-files/recv.nix;
        utf8-string.revision = import ./cabal-files/utf8-string.nix;
        entropy.revision = import ./cabal-files/entropy.nix;
        entropy.flags.donotgetentropy = false;
        Cabal.revision = (((hackage.Cabal)."3.2.1.0").revisions).default;
        splitmix.revision = import ./cabal-files/splitmix.nix;
        splitmix.flags.optimised-mixer = false;
        cardano-crypto-tests.revision = import ./cabal-files/cardano-crypto-tests.nix;
        cardano-crypto-tests.flags.secp256k1-support = true;
        cardano-crypto-tests.flags.development = false;
        system-filepath.revision = import ./cabal-files/system-filepath.nix;
        pretty-simple.revision = import ./cabal-files/pretty-simple.nix;
        pretty-simple.flags.buildexe = true;
        pretty-simple.flags.buildexample = false;
        assoc.revision = import ./cabal-files/assoc.nix;
        io-streams-haproxy.revision = import ./cabal-files/io-streams-haproxy.nix;
        containers.revision = (((hackage.containers)."0.6.5.1").revisions).default;
        http-date.revision = import ./cabal-files/http-date.nix;
        ouroboros-consensus-cardano.revision = import ./cabal-files/ouroboros-consensus-cardano.nix;
        ouroboros-consensus-cardano.flags.asserts = false;
        iso8601-time.revision = import ./cabal-files/iso8601-time.nix;
        iso8601-time.flags.new-time = true;
        nothunks.revision = import ./cabal-files/nothunks.nix;
        nothunks.flags.bytestring = true;
        nothunks.flags.text = true;
        nothunks.flags.vector = true;
        call-stack.revision = import ./cabal-files/call-stack.nix;
        prettyprinter.revision = import ./cabal-files/prettyprinter.nix;
        prettyprinter.flags.buildreadme = false;
        prettyprinter.flags.text = true;
        flat.revision = import ./cabal-files/flat.nix;
        tf-random.revision = import ./cabal-files/tf-random.nix;
        unbounded-delays.revision = import ./cabal-files/unbounded-delays.nix;
        th-expand-syns.revision = import ./cabal-files/th-expand-syns.nix;
        clock.revision = import ./cabal-files/clock.nix;
        clock.flags.llvm = false;
        stm.revision = (((hackage.stm)."2.5.0.1").revisions).default;
        libyaml.revision = import ./cabal-files/libyaml.nix;
        libyaml.flags.system-libyaml = false;
        libyaml.flags.no-unicode = false;
        SHA.revision = import ./cabal-files/SHA.nix;
        SHA.flags.exe = false;
        http-media.revision = import ./cabal-files/http-media.nix;
        bech32.revision = import ./cabal-files/bech32.nix;
        bech32.flags.static = false;
        bech32.flags.release = false;
        streaming.revision = import ./cabal-files/streaming.nix;
        insert-ordered-containers.revision = import ./cabal-files/insert-ordered-containers.nix;
        cardano-crypto-praos.revision = import ./cabal-files/cardano-crypto-praos.nix;
        cardano-crypto-praos.flags.external-libsodium-vrf = true;
        cardano-crypto-praos.flags.development = false;
        websockets.revision = import ./cabal-files/websockets.nix;
        websockets.flags.example = false;
        semigroups.revision = import ./cabal-files/semigroups.nix;
        semigroups.flags.bytestring = true;
        semigroups.flags.bytestring-builder = false;
        semigroups.flags.tagged = true;
        semigroups.flags.containers = true;
        semigroups.flags.deepseq = true;
        semigroups.flags.template-haskell = true;
        semigroups.flags.binary = true;
        semigroups.flags.transformers = true;
        semigroups.flags.unordered-containers = true;
        semigroups.flags.text = true;
        semigroups.flags.hashable = true;
        writer-cps-mtl.revision = import ./cabal-files/writer-cps-mtl.nix;
        regex-posix.revision = import ./cabal-files/regex-posix.nix;
        regex-posix.flags._regex-posix-clib = false;
        socks.revision = import ./cabal-files/socks.nix;
        OneTuple.revision = import ./cabal-files/OneTuple.nix;
        statistics-linreg.revision = import ./cabal-files/statistics-linreg.nix;
        katip.revision = import ./cabal-files/katip.nix;
        katip.flags.lib-werror = false;
        x509-store.revision = import ./cabal-files/x509-store.nix;
        hedgehog-quickcheck.revision = import ./cabal-files/hedgehog-quickcheck.nix;
        bin.revision = import ./cabal-files/bin.nix;
        network-uri.revision = import ./cabal-files/network-uri.nix;
        silently.revision = import ./cabal-files/silently.nix;
        tdigest.revision = import ./cabal-files/tdigest.nix;
        cardano-ledger-alonzo-test.revision = import ./cabal-files/cardano-ledger-alonzo-test.nix;
        pretty-show.revision = import ./cabal-files/pretty-show.nix;
        lazysmallcheck.revision = import ./cabal-files/lazysmallcheck.nix;
        reducers.revision = import ./cabal-files/reducers.nix;
        base.revision = (((hackage.base)."4.14.3.0").revisions).default;
        typed-process.revision = import ./cabal-files/typed-process.nix;
        time.revision = (((hackage.time)."1.9.3").revisions).default;
        data-default-instances-old-locale.revision = import ./cabal-files/data-default-instances-old-locale.nix;
        pem.revision = import ./cabal-files/pem.nix;
        microlens.revision = import ./cabal-files/microlens.nix;
        show-combinators.revision = import ./cabal-files/show-combinators.nix;
        deriving-aeson.revision = import ./cabal-files/deriving-aeson.nix;
        optparse-applicative-fork.revision = import ./cabal-files/optparse-applicative-fork.nix;
        optparse-applicative-fork.flags.process = true;
        http2.revision = import ./cabal-files/http2.nix;
        http2.flags.devel = false;
        http2.flags.h2spec = false;
        http2.flags.doc = false;
        quickcheck-state-machine.revision = import ./cabal-files/quickcheck-state-machine.nix;
        either.revision = import ./cabal-files/either.nix;
        resourcet.revision = import ./cabal-files/resourcet.nix;
        quickcheck-dynamic.revision = import ./cabal-files/quickcheck-dynamic.nix;
        ListLike.revision = import ./cabal-files/ListLike.nix;
        lifted-async.revision = import ./cabal-files/lifted-async.nix;
        split.revision = import ./cabal-files/split.nix;
        uuid-types.revision = import ./cabal-files/uuid-types.nix;
        setenv.revision = import ./cabal-files/setenv.nix;
        barbies.revision = import ./cabal-files/barbies.nix;
        bsb-http-chunked.revision = import ./cabal-files/bsb-http-chunked.nix;
        case-insensitive.revision = import ./cabal-files/case-insensitive.nix;
        file-embed.revision = import ./cabal-files/file-embed.nix;
        optparse-generic.revision = import ./cabal-files/optparse-generic.nix;
        cereal.revision = import ./cabal-files/cereal.nix;
        cereal.flags.bytestring-builder = false;
        streaming-bytestring.revision = import ./cabal-files/streaming-bytestring.nix;
        small-steps.revision = import ./cabal-files/small-steps.nix;
        small-steps.flags.sts_assert = false;
        cookie.revision = import ./cabal-files/cookie.nix;
        gray-code.revision = import ./cabal-files/gray-code.nix;
        data-default.revision = import ./cabal-files/data-default.nix;
        writer-cps-transformers.revision = import ./cabal-files/writer-cps-transformers.nix;
        tls.revision = import ./cabal-files/tls.nix;
        tls.flags.network = true;
        tls.flags.hans = false;
        tls.flags.compat = true;
        th-abstraction.revision = import ./cabal-files/th-abstraction.nix;
        dictionary-sharing.revision = import ./cabal-files/dictionary-sharing.nix;
        req.revision = import ./cabal-files/req.nix;
        req.flags.dev = false;
        hsc2hs.revision = import ./cabal-files/hsc2hs.nix;
        hsc2hs.flags.in-ghc-tree = false;
        ouroboros-network-framework.revision = import ./cabal-files/ouroboros-network-framework.nix;
        semigroupoids.revision = import ./cabal-files/semigroupoids.nix;
        semigroupoids.flags.tagged = true;
        semigroupoids.flags.containers = true;
        semigroupoids.flags.distributive = true;
        semigroupoids.flags.unordered-containers = true;
        semigroupoids.flags.contravariant = true;
        semigroupoids.flags.comonad = true;
        genvalidity.revision = import ./cabal-files/genvalidity.nix;
        orphans-deriving-via.revision = import ./cabal-files/orphans-deriving-via.nix;
        orphans-deriving-via.flags.development = false;
        hostname.revision = import ./cabal-files/hostname.nix;
        optparse-applicative.revision = import ./cabal-files/optparse-applicative.nix;
        optparse-applicative.flags.process = true;
        th-extras.revision = import ./cabal-files/th-extras.nix;
        typerep-map.revision = import ./cabal-files/typerep-map.nix;
        half.revision = import ./cabal-files/half.nix;
        wcwidth.revision = import ./cabal-files/wcwidth.nix;
        wcwidth.flags.split-base = true;
        wcwidth.flags.cli = false;
        word-array.revision = import ./cabal-files/word-array.nix;
        ouroboros-consensus-shelley.revision = import ./cabal-files/ouroboros-consensus-shelley.nix;
        ouroboros-consensus-shelley.flags.asserts = false;
        free.revision = import ./cabal-files/free.nix;
        byron-spec-chain.revision = import ./cabal-files/byron-spec-chain.nix;
        constraints-extras.revision = import ./cabal-files/constraints-extras.nix;
        constraints-extras.flags.build-readme = true;
        cardano-crypto-test.revision = import ./cabal-files/cardano-crypto-test.nix;
        network-byte-order.revision = import ./cabal-files/network-byte-order.nix;
        asn1-encoding.revision = import ./cabal-files/asn1-encoding.nix;
        profunctors.revision = import ./cabal-files/profunctors.nix;
        terminfo.revision = (((hackage.terminfo)."0.4.1.4").revisions).default;
        void.revision = import ./cabal-files/void.nix;
        void.flags.safe = false;
        old-locale.revision = import ./cabal-files/old-locale.nix;
        serialise.revision = import ./cabal-files/serialise.nix;
        serialise.flags.newtime15 = true;
        unix-bytestring.revision = import ./cabal-files/unix-bytestring.nix;
        async.revision = import ./cabal-files/async.nix;
        async.flags.bench = false;
        word8.revision = import ./cabal-files/word8.nix;
        base-orphans.revision = import ./cabal-files/base-orphans.nix;
        microlens-mtl.revision = import ./cabal-files/microlens-mtl.nix;
        cabal-doctest.revision = import ./cabal-files/cabal-doctest.nix;
        kan-extensions.revision = import ./cabal-files/kan-extensions.nix;
        reflection.revision = import ./cabal-files/reflection.nix;
        reflection.flags.slow = false;
        reflection.flags.template-haskell = true;
        witherable.revision = import ./cabal-files/witherable.nix;
        random.revision = import ./cabal-files/random.nix;
        selective.revision = import ./cabal-files/selective.nix;
        snap-core.revision = import ./cabal-files/snap-core.nix;
        snap-core.flags.portable = false;
        snap-core.flags.network-uri = true;
        snap-core.flags.debug = false;
        iproute.revision = import ./cabal-files/iproute.nix;
        primitive.revision = import ./cabal-files/primitive.nix;
        modern-uri.revision = import ./cabal-files/modern-uri.nix;
        modern-uri.flags.dev = false;
        deepseq.revision = (((hackage.deepseq)."1.4.4.0").revisions).default;
        data-clist.revision = import ./cabal-files/data-clist.nix;
        type-equality.revision = import ./cabal-files/type-equality.nix;
        hkd.revision = import ./cabal-files/hkd.nix;
        streaming-binary.revision = import ./cabal-files/streaming-binary.nix;
        foldl.revision = import ./cabal-files/foldl.nix;
        digest.revision = import ./cabal-files/digest.nix;
        digest.flags.bytestring-in-base = false;
        markov-chain-usage-model.revision = import ./cabal-files/markov-chain-usage-model.nix;
        ouroboros-consensus-byron-test.revision = import ./cabal-files/ouroboros-consensus-byron-test.nix;
        conduit.revision = import ./cabal-files/conduit.nix;
        hedgehog.revision = import ./cabal-files/hedgehog.nix;
        xml-conduit.revision = import ./cabal-files/xml-conduit.nix;
        config-ini.revision = import ./cabal-files/config-ini.nix;
        config-ini.flags.enable-doctests = false;
        MonadRandom.revision = import ./cabal-files/MonadRandom.nix;
        mmorph.revision = import ./cabal-files/mmorph.nix;
        happy.revision = import ./cabal-files/happy.nix;
        partial-order.revision = import ./cabal-files/partial-order.nix;
        partial-order.flags.extra-instances = true;
        hspec-expectations.revision = import ./cabal-files/hspec-expectations.nix;
        microstache.revision = import ./cabal-files/microstache.nix;
        microlens-th.revision = import ./cabal-files/microlens-th.nix;
        th-utilities.revision = import ./cabal-files/th-utilities.nix;
        ouroboros-network-testing.revision = import ./cabal-files/ouroboros-network-testing.nix;
        ouroboros-network-testing.flags.nightly = false;
        pipes.revision = import ./cabal-files/pipes.nix;
        fgl.revision = import ./cabal-files/fgl.nix;
        fgl.flags.containers042 = true;
        distributive.revision = import ./cabal-files/distributive.nix;
        distributive.flags.tagged = true;
        distributive.flags.semigroups = true;
        testing-type-modifiers.revision = import ./cabal-files/testing-type-modifiers.nix;
        haskell-lexer.revision = import ./cabal-files/haskell-lexer.nix;
        rts.revision = (((hackage.rts)."1.0.1").revisions).default;
        temporary.revision = import ./cabal-files/temporary.nix;
        process-extras.revision = import ./cabal-files/process-extras.nix;
        Win32-network.revision = import ./cabal-files/Win32-network.nix;
        Win32-network.flags.demo = false;
        cardano-ledger-shelley-test.revision = import ./cabal-files/cardano-ledger-shelley-test.nix;
        ghci.revision = (((hackage.ghci)."8.10.7").revisions).default;
        parsers.revision = import ./cabal-files/parsers.nix;
        parsers.flags.parsec = true;
        parsers.flags.binary = true;
        parsers.flags.attoparsec = true;
        protolude.revision = import ./cabal-files/protolude.nix;
        protolude.flags.dev = false;
        optics-extra.revision = import ./cabal-files/optics-extra.nix;
        versions.revision = import ./cabal-files/versions.nix;
        tree-diff.revision = import ./cabal-files/tree-diff.nix;
        aeson-pretty.revision = import ./cabal-files/aeson-pretty.nix;
        aeson-pretty.flags.lib-only = false;
        relude.revision = import ./cabal-files/relude.nix;
        cassava.revision = import ./cabal-files/cassava.nix;
        cassava.flags.bytestring--lt-0_10_4 = false;
        template-haskell.revision = (((hackage.template-haskell)."2.16.0.0").revisions).default;
        blaze-markup.revision = import ./cabal-files/blaze-markup.nix;
        mono-traversable.revision = import ./cabal-files/mono-traversable.nix;
        iohk-monitoring.revision = import ./cabal-files/iohk-monitoring.nix;
        iohk-monitoring.flags.disable-observables = false;
        iohk-monitoring.flags.performance-test-queue = false;
        binary.revision = (((hackage.binary)."0.8.8.0").revisions).default;
        tasty-golden.revision = import ./cabal-files/tasty-golden.nix;
        tasty-golden.flags.build-example = false;
        indexed-traversable-instances.revision = import ./cabal-files/indexed-traversable-instances.nix;
        boring.revision = import ./cabal-files/boring.nix;
        boring.flags.tagged = true;
        ansi-wl-pprint.revision = import ./cabal-files/ansi-wl-pprint.nix;
        ansi-wl-pprint.flags.example = false;
        asn1-types.revision = import ./cabal-files/asn1-types.nix;
        conduit-extra.revision = import ./cabal-files/conduit-extra.nix;
        wai-websockets.revision = import ./cabal-files/wai-websockets.nix;
        wai-websockets.flags.example = true;
        auto-update.revision = import ./cabal-files/auto-update.nix;
        io-sim.revision = import ./cabal-files/io-sim.nix;
        io-sim.flags.asserts = false;
        base64-bytestring.revision = import ./cabal-files/base64-bytestring.nix;
        brick.revision = import ./cabal-files/brick.nix;
        brick.flags.demos = false;
        say.revision = import ./cabal-files/say.nix;
        easy-file.revision = import ./cabal-files/easy-file.nix;
        indexed-profunctors.revision = import ./cabal-files/indexed-profunctors.nix;
        typed-protocols-examples.revision = import ./cabal-files/typed-protocols-examples.nix;
        ouroboros-consensus-shelley-test.revision = import ./cabal-files/ouroboros-consensus-shelley-test.nix;
        data-default-instances-containers.revision = import ./cabal-files/data-default-instances-containers.nix;
        lifted-base.revision = import ./cabal-files/lifted-base.nix;
        ansi-terminal.revision = import ./cabal-files/ansi-terminal.nix;
        ansi-terminal.flags.example = false;
        blaze-builder.revision = import ./cabal-files/blaze-builder.nix;
        ouroboros-consensus.revision = import ./cabal-files/ouroboros-consensus.nix;
        ouroboros-consensus.flags.asserts = false;
        vector-algorithms.revision = import ./cabal-files/vector-algorithms.nix;
        vector-algorithms.flags.internalchecks = false;
        vector-algorithms.flags.llvm = false;
        vector-algorithms.flags.properties = true;
        vector-algorithms.flags.boundschecks = true;
        vector-algorithms.flags.unsafechecks = false;
        vector-algorithms.flags.bench = true;
        http-conduit.revision = import ./cabal-files/http-conduit.nix;
        http-conduit.flags.aeson = true;
        regex-base.revision = import ./cabal-files/regex-base.nix;
        old-time.revision = import ./cabal-files/old-time.nix;
        invariant.revision = import ./cabal-files/invariant.nix;
        ghc-boot.revision = (((hackage.ghc-boot)."8.10.7").revisions).default;
        quiet.revision = import ./cabal-files/quiet.nix;
        data-default-class.revision = import ./cabal-files/data-default-class.nix;
        secp256k1-haskell.revision = import ./cabal-files/secp256k1-haskell.nix;
        deriving-compat.revision = import ./cabal-files/deriving-compat.nix;
        deriving-compat.flags.new-functor-classes = true;
        deriving-compat.flags.template-haskell-2-11 = true;
        deriving-compat.flags.base-4-9 = true;
        word-wrap.revision = import ./cabal-files/word-wrap.nix;
        xml-types.revision = import ./cabal-files/xml-types.nix;
        cardano-api.revision = import ./cabal-files/cardano-api.nix;
        polyparse.revision = import ./cabal-files/polyparse.nix;
        text-short.revision = import ./cabal-files/text-short.nix;
        text-short.flags.asserts = false;
        quickcheck-instances.revision = import ./cabal-files/quickcheck-instances.nix;
        quickcheck-instances.flags.bytestring-builder = false;
        fin.revision = import ./cabal-files/fin.nix;
        monad-control.revision = import ./cabal-files/monad-control.nix;
        generic-data.revision = import ./cabal-files/generic-data.nix;
        generic-data.flags.enable-inspect = false;
        base-deriving-via.revision = import ./cabal-files/base-deriving-via.nix;
        base-deriving-via.flags.development = false;
        wai-app-static.revision = import ./cabal-files/wai-app-static.nix;
        wai-app-static.flags.cryptonite = true;
        wai-app-static.flags.print = false;
        transformers-compat.revision = import ./cabal-files/transformers-compat.nix;
        transformers-compat.flags.two = false;
        transformers-compat.flags.mtl = true;
        transformers-compat.flags.four = false;
        transformers-compat.flags.five = false;
        transformers-compat.flags.five-three = true;
        transformers-compat.flags.three = false;
        transformers-compat.flags.generic-deriving = true;
        integer-gmp.revision = (((hackage.integer-gmp)."1.0.3.0").revisions).default;
        matrix.revision = import ./cabal-files/matrix.nix;
        ap-normalize.revision = import ./cabal-files/ap-normalize.nix;
        ap-normalize.flags.test-with-clang = false;
        th-reify-many.revision = import ./cabal-files/th-reify-many.nix;
        string-conv.revision = import ./cabal-files/string-conv.nix;
        string-conv.flags.lib-werror = false;
        filelock.revision = import ./cabal-files/filelock.nix;
        ouroboros-consensus-byronspec.revision = import ./cabal-files/ouroboros-consensus-byronspec.nix;
        text-zipper.revision = import ./cabal-files/text-zipper.nix;
        dom-lt.revision = import ./cabal-files/dom-lt.nix;
        formatting.revision = import ./cabal-files/formatting.nix;
        base58-bytestring.revision = import ./cabal-files/base58-bytestring.nix;
        regex-tdfa.revision = import ./cabal-files/regex-tdfa.nix;
        regex-tdfa.flags.force-o2 = false;
        snap-server.revision = import ./cabal-files/snap-server.nix;
        snap-server.flags.portable = false;
        snap-server.flags.build-pong = false;
        snap-server.flags.build-testserver = false;
        snap-server.flags.openssl = false;
        snap-server.flags.debug = false;
        Unique.revision = import ./cabal-files/Unique.nix;
        time-compat.revision = import ./cabal-files/time-compat.nix;
        time-compat.flags.old-locale = false;
        validity-scientific.revision = import ./cabal-files/validity-scientific.nix;
        process.revision = (((hackage.process)."1.6.13.2").revisions).default;
        unix.revision = (((hackage.unix)."2.7.2.2").revisions).default;
        vector-th-unbox.revision = import ./cabal-files/vector-th-unbox.nix;
        hspec.revision = import ./cabal-files/hspec.nix;
        data-default-instances-dlist.revision = import ./cabal-files/data-default-instances-dlist.nix;
        base64-bytestring-type.revision = import ./cabal-files/base64-bytestring-type.nix;
        base64-bytestring-type.flags.http-api-data = true;
        base64-bytestring-type.flags.cereal = true;
        base64-bytestring-type.flags.serialise = true;
        io-streams.revision = import ./cabal-files/io-streams.nix;
        io-streams.flags.network = true;
        io-streams.flags.zlib = true;
        io-streams.flags.nointeractivetests = false;
        cardano-ledger-test.revision = import ./cabal-files/cardano-ledger-test.nix;
        quickcheck-arbitrary-adt.revision = import ./cabal-files/quickcheck-arbitrary-adt.nix;
        dense-linear-algebra.revision = import ./cabal-files/dense-linear-algebra.nix;
        plutus-tx-plugin.revision = import ./cabal-files/plutus-tx-plugin.nix;
        plutus-tx-plugin.flags.use-ghc-stub = false;
        ral.revision = import ./cabal-files/ral.nix;
        ral.flags.adjunctions = true;
        ral.flags.semigroupoids = true;
        ral.flags.distributive = true;
        algebraic-graphs.revision = import ./cabal-files/algebraic-graphs.nix;
        wai.revision = import ./cabal-files/wai.nix;
        strict-stm.revision = import ./cabal-files/strict-stm.nix;
        strict-stm.flags.checktvarinvariant = false;
        strict-stm.flags.asserts = false;
        th-lift.revision = import ./cabal-files/th-lift.nix;
        composition-prelude.revision = import ./cabal-files/composition-prelude.nix;
        composition-prelude.flags.development = false;
        int-cast.revision = import ./cabal-files/int-cast.nix;
        deque.revision = import ./cabal-files/deque.nix;
        dec.revision = import ./cabal-files/dec.nix;
        monoidal-containers.revision = import ./cabal-files/monoidal-containers.nix;
        monoidal-containers.flags.split-these = true;
        size-based.revision = import ./cabal-files/size-based.nix;
        quickcheck-io.revision = import ./cabal-files/quickcheck-io.nix;
        byteorder.revision = import ./cabal-files/byteorder.nix;
        transformers-except.revision = import ./cabal-files/transformers-except.nix;
        retry.revision = import ./cabal-files/retry.nix;
        retry.flags.lib-werror = false;
        parallel.revision = import ./cabal-files/parallel.nix;
        cardano-ledger-alonzo.revision = import ./cabal-files/cardano-ledger-alonzo.nix;
        tasty-expected-failure.revision = import ./cabal-files/tasty-expected-failure.nix;
        cardano-ledger-core.revision = import ./cabal-files/cardano-ledger-core.nix;
        transformers.revision = (((hackage.transformers)."0.5.6.2").revisions).default;
        code-page.revision = import ./cabal-files/code-page.nix;
        bimap.revision = import ./cabal-files/bimap.nix;
        generic-monoid.revision = import ./cabal-files/generic-monoid.nix;
        ouroboros-consensus-byron.revision = import ./cabal-files/ouroboros-consensus-byron.nix;
        ouroboros-consensus-byron.flags.asserts = false;
        ekg-json.revision = import ./cabal-files/ekg-json.nix;
        cardano-binary-test.revision = import ./cabal-files/cardano-binary-test.nix;
        cardano-binary-test.flags.development = false;
        cardano-crypto.revision = import ./cabal-files/cardano-crypto.nix;
        cardano-crypto.flags.golden-tests-exe = false;
        cardano-crypto.flags.golden-tests = false;
        connection.revision = import ./cabal-files/connection.nix;
        lazy-search.revision = import ./cabal-files/lazy-search.nix;
        crypto-api.revision = import ./cabal-files/crypto-api.nix;
        crypto-api.flags.all_cpolys = false;
        atomic-primops.revision = import ./cabal-files/atomic-primops.nix;
        atomic-primops.flags.debug = false;
        logict.revision = import ./cabal-files/logict.nix;
        criterion.revision = import ./cabal-files/criterion.nix;
        criterion.flags.embed-data-files = false;
        criterion.flags.fast = false;
        indexed-traversable.revision = import ./cabal-files/indexed-traversable.nix;
        these.revision = import ./cabal-files/these.nix;
        these.flags.assoc = true;
        mersenne-random-pure64.revision = import ./cabal-files/mersenne-random-pure64.nix;
        mersenne-random-pure64.flags.small_base = false;
        dependent-sum-template.revision = import ./cabal-files/dependent-sum-template.nix;
        recursion-schemes.revision = import ./cabal-files/recursion-schemes.nix;
        recursion-schemes.flags.template-haskell = true;
        crypto-pubkey-types.revision = import ./cabal-files/crypto-pubkey-types.nix;
        cardano-slotting.revision = import ./cabal-files/cardano-slotting.nix;
        cardano-slotting.flags.development = false;
        io-classes.revision = import ./cabal-files/io-classes.nix;
        io-classes.flags.checktvarinvariant = false;
        io-classes.flags.asserts = false;
        newtype.revision = import ./cabal-files/newtype.nix;
        psqueues.revision = import ./cabal-files/psqueues.nix;
        unordered-containers.revision = import ./cabal-files/unordered-containers.nix;
        unordered-containers.flags.debug = false;
        QuickCheck.revision = import ./cabal-files/QuickCheck.nix;
        QuickCheck.flags.old-random = false;
        QuickCheck.flags.templatehaskell = true;
        syb.revision = import ./cabal-files/syb.nix;
        contravariant.revision = import ./cabal-files/contravariant.nix;
        contravariant.flags.tagged = true;
        contravariant.flags.semigroups = true;
        contravariant.flags.statevar = true;
        appar.revision = import ./cabal-files/appar.nix;
        tasty-hunit.revision = import ./cabal-files/tasty-hunit.nix;
        extra.revision = import ./cabal-files/extra.nix;
        typed-protocols.revision = import ./cabal-files/typed-protocols.nix;
        wl-pprint-text.revision = import ./cabal-files/wl-pprint-text.nix;
        zlib-bindings.revision = import ./cabal-files/zlib-bindings.nix;
        typed-protocols-cborg.revision = import ./cabal-files/typed-protocols-cborg.nix;
        base-compat-batteries.revision = import ./cabal-files/base-compat-batteries.nix;
        scientific.revision = import ./cabal-files/scientific.nix;
        scientific.flags.bytestring-builder = false;
        scientific.flags.integer-simple = false;
        generic-random.revision = import ./cabal-files/generic-random.nix;
        generic-random.flags.enable-inspect = false;
        ouroboros-consensus-protocol.revision = import ./cabal-files/ouroboros-consensus-protocol.nix;
        ouroboros-consensus-protocol.flags.asserts = false;
        text.revision = (((hackage.text)."1.2.4.1").revisions).default;
        groups.revision = import ./cabal-files/groups.nix;
        cardano-crypto-wrapper.revision = import ./cabal-files/cardano-crypto-wrapper.nix;
        validity.revision = import ./cabal-files/validity.nix;
        Glob.revision = import ./cabal-files/Glob.nix;
        Stream.revision = import ./cabal-files/Stream.nix;
        math-functions.revision = import ./cabal-files/math-functions.nix;
        math-functions.flags.system-erf = true;
        math-functions.flags.system-expm1 = true;
        vty.revision = import ./cabal-files/vty.nix;
        StateVar.revision = import ./cabal-files/StateVar.nix;
        vector-map.revision = import ./cabal-files/vector-map.nix;
        blaze-html.revision = import ./cabal-files/blaze-html.nix;
        network-mux.revision = import ./cabal-files/network-mux.nix;
        network-mux.flags.ipv6 = false;
        network-mux.flags.asserts = false;
        network-mux.flags.tracetcpinfo = false;
        th-compat.revision = import ./cabal-files/th-compat.nix;
        hspec-golden-aeson.revision = import ./cabal-files/hspec-golden-aeson.nix;
        hpc.revision = (((hackage.hpc)."0.6.1.0").revisions).default;
        attoparsec.revision = import ./cabal-files/attoparsec.nix;
        attoparsec.flags.developer = false;
        array.revision = (((hackage.array)."0.5.4.0").revisions).default;
        basement.revision = import ./cabal-files/basement.nix;
        ghc-boot-th.revision = (((hackage.ghc-boot-th)."8.10.7").revisions).default;
        wai-extra.revision = import ./cabal-files/wai-extra.nix;
        wai-extra.flags.build-example = false;
        ekg-core.revision = import ./cabal-files/ekg-core.nix;
        random-shuffle.revision = import ./cabal-files/random-shuffle.nix;
        charset.revision = import ./cabal-files/charset.nix;
        vector.revision = import ./cabal-files/vector.nix;
        vector.flags.internalchecks = false;
        vector.flags.wall = false;
        vector.flags.boundschecks = true;
        vector.flags.unsafechecks = false;
        x509-validation.revision = import ./cabal-files/x509-validation.nix;
        time-units.revision = import ./cabal-files/time-units.nix;
        tracer-transformers.revision = import ./cabal-files/tracer-transformers.nix;
        non-integral.revision = import ./cabal-files/non-integral.nix;
        comonad.revision = import ./cabal-files/comonad.nix;
        comonad.flags.containers = true;
        comonad.flags.distributive = true;
        comonad.flags.indexed-traversable = true;
        ouroboros-network.revision = import ./cabal-files/ouroboros-network.nix;
        ouroboros-network.flags.ipv6 = false;
        ouroboros-network.flags.cddl = true;
        ouroboros-network.flags.asserts = false;
        semialign.revision = import ./cabal-files/semialign.nix;
        semialign.flags.semigroupoids = true;
        ekg.revision = import ./cabal-files/ekg.nix;
        prettyprinter-ansi-terminal.revision = import ./cabal-files/prettyprinter-ansi-terminal.nix;
        readable.revision = import ./cabal-files/readable.nix;
        set-algebra.revision = import ./cabal-files/set-algebra.nix;
        prettyprinter-configurable.revision = import ./cabal-files/prettyprinter-configurable.nix;
        mime-types.revision = import ./cabal-files/mime-types.nix;
        erf.revision = import ./cabal-files/erf.nix;
        prometheus.revision = import ./cabal-files/prometheus.nix;
        warp.revision = import ./cabal-files/warp.nix;
        warp.flags.network-bytestring = false;
        warp.flags.x509 = true;
        warp.flags.allow-sendfilefd = true;
        warp.flags.warp-debug = false;
        Only.revision = import ./cabal-files/Only.nix;
        cborg.revision = import ./cabal-files/cborg.nix;
        cborg.flags.optimize-gmp = true;
        generic-deriving.revision = import ./cabal-files/generic-deriving.nix;
        generic-deriving.flags.base-4-9 = true;
        pretty.revision = (((hackage.pretty)."1.1.3.6").revisions).default;
        hashable.revision = import ./cabal-files/hashable.nix;
        hashable.flags.random-initial-seed = false;
        hashable.flags.integer-gmp = true;
        cardano-binary.revision = import ./cabal-files/cardano-binary.nix;
        cardano-binary.flags.development = false;
        };
      compiler = {
        version = "8.10.7";
        nix-name = "ghc8107";
        packages = {
          "ghc-boot" = "8.10.7";
          "pretty" = "1.1.3.6";
          "text" = "1.2.4.1";
          "array" = "0.5.4.0";
          "ghc" = "8.10.7";
          "Cabal" = "3.2.1.0";
          "mtl" = "2.2.2";
          "parsec" = "3.1.14.0";
          "bytestring" = "0.10.12.0";
          "filepath" = "1.4.2.1";
          "stm" = "2.5.0.1";
          "terminfo" = "0.4.1.4";
          "ghc-heap" = "8.10.7";
          "ghc-prim" = "0.6.1";
          "ghc-boot-th" = "8.10.7";
          "base" = "4.14.3.0";
          "time" = "1.9.3";
          "process" = "1.6.13.2";
          "directory" = "1.3.6.0";
          "exceptions" = "0.10.4";
          "hpc" = "0.6.1.0";
          "rts" = "1.0.1";
          "transformers" = "0.5.6.2";
          "template-haskell" = "2.16.0.0";
          "ghci" = "8.10.7";
          "deepseq" = "1.4.4.0";
          "unix" = "2.7.2.2";
          "integer-gmp" = "1.0.3.0";
          "binary" = "0.8.8.0";
          "containers" = "0.6.5.1";
          };
        };
      };
  extras = hackage:
    {
      packages = {
        hydra-cardano-api = ./.plan.nix/hydra-cardano-api.nix;
        plutus-merkle-tree = ./.plan.nix/plutus-merkle-tree.nix;
        plutus-cbor = ./.plan.nix/plutus-cbor.nix;
        hydra-plutus = ./.plan.nix/hydra-plutus.nix;
        hydraw = ./.plan.nix/hydraw.nix;
        hydra-cluster = ./.plan.nix/hydra-cluster.nix;
        hydra-prelude = ./.plan.nix/hydra-prelude.nix;
        hydra-tui = ./.plan.nix/hydra-tui.nix;
        hydra-node = ./.plan.nix/hydra-node.nix;
        hydra-test-utils = ./.plan.nix/hydra-test-utils.nix;
        };
      };
  modules = [
    ({ lib, ... }:
      {
        packages = {
          "hydra-cardano-api" = {
            flags = { "hydra-development" = lib.mkOverride 900 false; };
            };
          "plutus-merkle-tree" = {
            flags = { "hydra-development" = lib.mkOverride 900 false; };
            };
          "plutus-cbor" = {
            flags = { "hydra-development" = lib.mkOverride 900 false; };
            };
          "hydra-plutus" = {
            flags = { "hydra-development" = lib.mkOverride 900 false; };
            };
          "hydraw" = { flags = {}; };
          "hydra-cluster" = {
            flags = { "hydra-development" = lib.mkOverride 900 false; };
            };
          "hydra-prelude" = { flags = {}; };
          "hydra-tui" = {
            flags = { "hydra-development" = lib.mkOverride 900 false; };
            };
          "hydra-node" = {
            flags = { "hydra-development" = lib.mkOverride 900 false; };
            };
          "hydra-test-utils" = { flags = {}; };
          };
        })
    ({ lib, ... }:
      {
        packages = {
          "bytestring-builder".components.library.planned = lib.mkOverride 900 true;
          "hspec-core".components.library.planned = lib.mkOverride 900 true;
          "hydra-prelude".components.library.planned = lib.mkOverride 900 true;
          "tracer-transformers".components.exes."tracer-transfomers-example2".planned = lib.mkOverride 900 true;
          "foundation".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-byron".components.library.planned = lib.mkOverride 900 true;
          "either".components.library.planned = lib.mkOverride 900 true;
          "ansi-terminal".components.library.planned = lib.mkOverride 900 true;
          "quiet".components.library.planned = lib.mkOverride 900 true;
          "http-client-tls".components.library.planned = lib.mkOverride 900 true;
          "deriving-aeson".components.library.planned = lib.mkOverride 900 true;
          "goblins".components.library.planned = lib.mkOverride 900 true;
          "tasty-quickcheck".components.library.planned = lib.mkOverride 900 true;
          "string-conversions".components.library.planned = lib.mkOverride 900 true;
          "base16-bytestring".components.library.planned = lib.mkOverride 900 true;
          "terminal-size".components.library.planned = lib.mkOverride 900 true;
          "invariant".components.library.planned = lib.mkOverride 900 true;
          "transformers-base".components.library.planned = lib.mkOverride 900 true;
          "base-orphans".components.library.planned = lib.mkOverride 900 true;
          "lazy-search".components.library.planned = lib.mkOverride 900 true;
          "groups".components.library.planned = lib.mkOverride 900 true;
          "bin".components.library.planned = lib.mkOverride 900 true;
          "hydra-node".components.exes."hydra-node".planned = lib.mkOverride 900 true;
          "th-orphans".components.library.planned = lib.mkOverride 900 true;
          "socks".components.library.planned = lib.mkOverride 900 true;
          "tracer-transformers".components.exes."tracer-transfomers-example1".planned = lib.mkOverride 900 true;
          "hydra-cluster".components.tests."integration".planned = lib.mkOverride 900 true;
          "hydra-tui".components.library.planned = lib.mkOverride 900 true;
          "megaparsec".components.library.planned = lib.mkOverride 900 true;
          "markov-chain-usage-model".components.library.planned = lib.mkOverride 900 true;
          "cookie".components.library.planned = lib.mkOverride 900 true;
          "bimap".components.library.planned = lib.mkOverride 900 true;
          "math-functions".components.library.planned = lib.mkOverride 900 true;
          "these".components.library.planned = lib.mkOverride 900 true;
          "plutus-merkle-tree".components.benchmarks."on-chain-cost".planned = lib.mkOverride 900 true;
          "cardano-binary-test".components.library.planned = lib.mkOverride 900 true;
          "cardano-crypto-wrapper".components.library.planned = lib.mkOverride 900 true;
          "pretty-simple".components.setup.planned = lib.mkOverride 900 true;
          "cereal".components.library.planned = lib.mkOverride 900 true;
          "pretty-show".components.exes."ppsh".planned = lib.mkOverride 900 true;
          "measures".components.library.planned = lib.mkOverride 900 true;
          "barbies".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus-byron".components.exes."db-converter".planned = lib.mkOverride 900 true;
          "resourcet".components.library.planned = lib.mkOverride 900 true;
          "tdigest".components.library.planned = lib.mkOverride 900 true;
          "extra".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-shelley-ma-test".components.library.planned = lib.mkOverride 900 true;
          "http2".components.library.planned = lib.mkOverride 900 true;
          "microlens".components.library.planned = lib.mkOverride 900 true;
          "hedgehog".components.library.planned = lib.mkOverride 900 true;
          "fmlist".components.library.planned = lib.mkOverride 900 true;
          "filepath".components.library.planned = lib.mkOverride 900 true;
          "data-default-instances-old-locale".components.library.planned = lib.mkOverride 900 true;
          "hydra-node".components.benchmarks."tx-cost".planned = lib.mkOverride 900 true;
          "pretty-show".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-babbage".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-test".components.library.planned = lib.mkOverride 900 true;
          "ral".components.library.planned = lib.mkOverride 900 true;
          "wai".components.library.planned = lib.mkOverride 900 true;
          "system-filepath".components.library.planned = lib.mkOverride 900 true;
          "network-mux".components.exes."mux-demo".planned = lib.mkOverride 900 true;
          "ouroboros-consensus-cardano-test".components.library.planned = lib.mkOverride 900 true;
          "distributive".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-network-framework".components.exes."demo-ping-pong".planned = lib.mkOverride 900 true;
          "pretty".components.library.planned = lib.mkOverride 900 true;
          "utf8-string".components.library.planned = lib.mkOverride 900 true;
          "pretty-simple".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus-cardano".components.library.planned = lib.mkOverride 900 true;
          "typerep-map".components.sublibs."typerep-extra-impls".planned = lib.mkOverride 900 true;
          "plutus-tx".components.sublibs."plutus-tx-testlib".planned = lib.mkOverride 900 true;
          "Cabal".components.library.planned = lib.mkOverride 900 true;
          "reflection".components.library.planned = lib.mkOverride 900 true;
          "gitrev".components.library.planned = lib.mkOverride 900 true;
          "authenticate-oauth".components.library.planned = lib.mkOverride 900 true;
          "Unique".components.library.planned = lib.mkOverride 900 true;
          "attoparsec-iso8601".components.library.planned = lib.mkOverride 900 true;
          "quickcheck-io".components.library.planned = lib.mkOverride 900 true;
          "dec".components.library.planned = lib.mkOverride 900 true;
          "SHA".components.library.planned = lib.mkOverride 900 true;
          "bytestring".components.library.planned = lib.mkOverride 900 true;
          "cardano-api".components.sublibs."gen".planned = lib.mkOverride 900 true;
          "tasty-golden".components.library.planned = lib.mkOverride 900 true;
          "composition-prelude".components.library.planned = lib.mkOverride 900 true;
          "graphviz".components.library.planned = lib.mkOverride 900 true;
          "plutus-cbor".components.library.planned = lib.mkOverride 900 true;
          "mwc-random".components.library.planned = lib.mkOverride 900 true;
          "mono-traversable".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-core".components.library.planned = lib.mkOverride 900 true;
          "zlib".components.library.planned = lib.mkOverride 900 true;
          "list-t".components.library.planned = lib.mkOverride 900 true;
          "strict".components.library.planned = lib.mkOverride 900 true;
          "entropy".components.setup.planned = lib.mkOverride 900 true;
          "comonad".components.library.planned = lib.mkOverride 900 true;
          "data-fix".components.library.planned = lib.mkOverride 900 true;
          "mtl-compat".components.library.planned = lib.mkOverride 900 true;
          "hydra-node".components.tests."tests".planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."uplc".planned = lib.mkOverride 900 true;
          "modern-uri".components.library.planned = lib.mkOverride 900 true;
          "set-algebra".components.library.planned = lib.mkOverride 900 true;
          "unliftio".components.library.planned = lib.mkOverride 900 true;
          "typed-protocols-examples".components.library.planned = lib.mkOverride 900 true;
          "cborg".components.library.planned = lib.mkOverride 900 true;
          "constraints-extras".components.exes."readme".planned = lib.mkOverride 900 true;
          "prettyprinter-ansi-terminal".components.library.planned = lib.mkOverride 900 true;
          "base64-bytestring-type".components.library.planned = lib.mkOverride 900 true;
          "data-clist".components.library.planned = lib.mkOverride 900 true;
          "sop-core".components.library.planned = lib.mkOverride 900 true;
          "serialise".components.library.planned = lib.mkOverride 900 true;
          "ekg".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus-shelley-test".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus-shelley".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-network".components.library.planned = lib.mkOverride 900 true;
          "profunctors".components.library.planned = lib.mkOverride 900 true;
          "exceptions".components.library.planned = lib.mkOverride 900 true;
          "mmorph".components.library.planned = lib.mkOverride 900 true;
          "safe-exceptions".components.library.planned = lib.mkOverride 900 true;
          "strict-containers".components.library.planned = lib.mkOverride 900 true;
          "call-stack".components.library.planned = lib.mkOverride 900 true;
          "unix-bytestring".components.library.planned = lib.mkOverride 900 true;
          "async-timer".components.library.planned = lib.mkOverride 900 true;
          "optics-core".components.library.planned = lib.mkOverride 900 true;
          "old-time".components.library.planned = lib.mkOverride 900 true;
          "size-based".components.library.planned = lib.mkOverride 900 true;
          "dlist".components.library.planned = lib.mkOverride 900 true;
          "time-manager".components.library.planned = lib.mkOverride 900 true;
          "snap-core".components.library.planned = lib.mkOverride 900 true;
          "ghc-prim".components.library.planned = lib.mkOverride 900 true;
          "vty".components.exes."vty-demo".planned = lib.mkOverride 900 true;
          "HUnit".components.library.planned = lib.mkOverride 900 true;
          "some".components.library.planned = lib.mkOverride 900 true;
          "dependent-sum-template".components.library.planned = lib.mkOverride 900 true;
          "hydra-node".components.exes."hydra-tools".planned = lib.mkOverride 900 true;
          "validation-selective".components.library.planned = lib.mkOverride 900 true;
          "generic-data".components.library.planned = lib.mkOverride 900 true;
          "small-steps".components.library.planned = lib.mkOverride 900 true;
          "array".components.library.planned = lib.mkOverride 900 true;
          "x509".components.library.planned = lib.mkOverride 900 true;
          "quickcheck-instances".components.library.planned = lib.mkOverride 900 true;
          "mersenne-random-pure64".components.library.planned = lib.mkOverride 900 true;
          "js-chart".components.library.planned = lib.mkOverride 900 true;
          "plutus-cbor".components.exes."encoding-cost".planned = lib.mkOverride 900 true;
          "canonical-json".components.library.planned = lib.mkOverride 900 true;
          "tracer-transformers".components.library.planned = lib.mkOverride 900 true;
          "binary".components.library.planned = lib.mkOverride 900 true;
          "hydra-cluster".components.benchmarks."bench-e2e".planned = lib.mkOverride 900 true;
          "ouroboros-consensus-test".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-network-framework".components.library.planned = lib.mkOverride 900 true;
          "charset".components.library.planned = lib.mkOverride 900 true;
          "cardano-crypto-class".components.library.planned = lib.mkOverride 900 true;
          "wai-extra".components.library.planned = lib.mkOverride 900 true;
          "ghc-boot-th".components.library.planned = lib.mkOverride 900 true;
          "typerep-map".components.library.planned = lib.mkOverride 900 true;
          "scientific".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-alonzo-test".components.library.planned = lib.mkOverride 900 true;
          "boring".components.library.planned = lib.mkOverride 900 true;
          "th-extras".components.library.planned = lib.mkOverride 900 true;
          "relude".components.library.planned = lib.mkOverride 900 true;
          "openapi3".components.setup.planned = lib.mkOverride 900 true;
          "hspec-discover".components.exes."hspec-discover".planned = lib.mkOverride 900 true;
          "iso8601-time".components.library.planned = lib.mkOverride 900 true;
          "splitmix".components.library.planned = lib.mkOverride 900 true;
          "io-sim".components.library.planned = lib.mkOverride 900 true;
          "rts".components.library.planned = lib.mkOverride 900 true;
          "fgl".components.library.planned = lib.mkOverride 900 true;
          "nothunks".components.library.planned = lib.mkOverride 900 true;
          "dense-linear-algebra".components.library.planned = lib.mkOverride 900 true;
          "blaze-html".components.library.planned = lib.mkOverride 900 true;
          "moo".components.library.planned = lib.mkOverride 900 true;
          "temporary".components.library.planned = lib.mkOverride 900 true;
          "hydraw".components.exes."hydraw".planned = lib.mkOverride 900 true;
          "tagged".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-network".components.sublibs."protocol-tests".planned = lib.mkOverride 900 true;
          "unix".components.library.planned = lib.mkOverride 900 true;
          "cardano-protocol-tpraos".components.library.planned = lib.mkOverride 900 true;
          "file-embed".components.library.planned = lib.mkOverride 900 true;
          "optics-th".components.library.planned = lib.mkOverride 900 true;
          "simple-sendfile".components.library.planned = lib.mkOverride 900 true;
          "pipes".components.library.planned = lib.mkOverride 900 true;
          "recv".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-pretty".components.library.planned = lib.mkOverride 900 true;
          "hsc2hs".components.exes."hsc2hs".planned = lib.mkOverride 900 true;
          "parser-combinators".components.library.planned = lib.mkOverride 900 true;
          "Win32-network".components.library.planned = lib.mkOverride 900 true;
          "int-cast".components.library.planned = lib.mkOverride 900 true;
          "vector".components.library.planned = lib.mkOverride 900 true;
          "indexed-traversable-instances".components.library.planned = lib.mkOverride 900 true;
          "data-default-class".components.library.planned = lib.mkOverride 900 true;
          "flat".components.library.planned = lib.mkOverride 900 true;
          "wai-websockets".components.exes."wai-websockets-example".planned = lib.mkOverride 900 true;
          "regex-base".components.library.planned = lib.mkOverride 900 true;
          "adjunctions".components.library.planned = lib.mkOverride 900 true;
          "tree-diff".components.library.planned = lib.mkOverride 900 true;
          "vector-binary-instances".components.library.planned = lib.mkOverride 900 true;
          "parallel".components.library.planned = lib.mkOverride 900 true;
          "cryptonite".components.library.planned = lib.mkOverride 900 true;
          "asn1-parse".components.library.planned = lib.mkOverride 900 true;
          "foldl".components.library.planned = lib.mkOverride 900 true;
          "prometheus".components.library.planned = lib.mkOverride 900 true;
          "type-equality".components.library.planned = lib.mkOverride 900 true;
          "network-byte-order".components.library.planned = lib.mkOverride 900 true;
          "word-array".components.library.planned = lib.mkOverride 900 true;
          "mime-types".components.library.planned = lib.mkOverride 900 true;
          "silently".components.library.planned = lib.mkOverride 900 true;
          "ekg-json".components.library.planned = lib.mkOverride 900 true;
          "concurrent-output".components.library.planned = lib.mkOverride 900 true;
          "directory".components.library.planned = lib.mkOverride 900 true;
          "happy".components.exes."happy".planned = lib.mkOverride 900 true;
          "time".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-babbage-test".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus-protocol".components.library.planned = lib.mkOverride 900 true;
          "cardano-prelude".components.library.planned = lib.mkOverride 900 true;
          "MonadRandom".components.library.planned = lib.mkOverride 900 true;
          "bech32-th".components.library.planned = lib.mkOverride 900 true;
          "quickcheck-state-machine".components.library.planned = lib.mkOverride 900 true;
          "cardano-slotting".components.library.planned = lib.mkOverride 900 true;
          "http-api-data".components.library.planned = lib.mkOverride 900 true;
          "network".components.library.planned = lib.mkOverride 900 true;
          "psqueues".components.library.planned = lib.mkOverride 900 true;
          "show-combinators".components.library.planned = lib.mkOverride 900 true;
          "ListLike".components.library.planned = lib.mkOverride 900 true;
          "bsb-http-chunked".components.library.planned = lib.mkOverride 900 true;
          "vty".components.exes."vty-build-width-table".planned = lib.mkOverride 900 true;
          "ouroboros-network-testing".components.library.planned = lib.mkOverride 900 true;
          "cmdargs".components.library.planned = lib.mkOverride 900 true;
          "aeson-pretty".components.exes."aeson-pretty".planned = lib.mkOverride 900 true;
          "word-wrap".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter-configurable".components.setup.planned = lib.mkOverride 900 true;
          "genvalidity-scientific".components.library.planned = lib.mkOverride 900 true;
          "StateVar".components.library.planned = lib.mkOverride 900 true;
          "xml-types".components.library.planned = lib.mkOverride 900 true;
          "deriving-compat".components.library.planned = lib.mkOverride 900 true;
          "fast-logger".components.library.planned = lib.mkOverride 900 true;
          "data-default".components.library.planned = lib.mkOverride 900 true;
          "case-insensitive".components.library.planned = lib.mkOverride 900 true;
          "fin".components.library.planned = lib.mkOverride 900 true;
          "strict-stm".components.library.planned = lib.mkOverride 900 true;
          "io-streams-haproxy".components.library.planned = lib.mkOverride 900 true;
          "cardano-api".components.library.planned = lib.mkOverride 900 true;
          "secp256k1-haskell".components.library.planned = lib.mkOverride 900 true;
          "bech32".components.library.planned = lib.mkOverride 900 true;
          "ghc".components.library.planned = lib.mkOverride 900 true;
          "th-expand-syns".components.library.planned = lib.mkOverride 900 true;
          "hydra-plutus".components.tests."tests".planned = lib.mkOverride 900 true;
          "strict-list".components.library.planned = lib.mkOverride 900 true;
          "tasty-expected-failure".components.library.planned = lib.mkOverride 900 true;
          "text-zipper".components.library.planned = lib.mkOverride 900 true;
          "config-ini".components.library.planned = lib.mkOverride 900 true;
          "unix-time".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-shelley-ma".components.library.planned = lib.mkOverride 900 true;
          "snap-server".components.library.planned = lib.mkOverride 900 true;
          "orphans-deriving-via".components.library.planned = lib.mkOverride 900 true;
          "half".components.library.planned = lib.mkOverride 900 true;
          "websockets".components.library.planned = lib.mkOverride 900 true;
          "indexed-profunctors".components.library.planned = lib.mkOverride 900 true;
          "brick".components.library.planned = lib.mkOverride 900 true;
          "readable".components.library.planned = lib.mkOverride 900 true;
          "generic-deriving".components.library.planned = lib.mkOverride 900 true;
          "free".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.sublibs."plutus-core-testlib".planned = lib.mkOverride 900 true;
          "hspec-junit-formatter".components.library.planned = lib.mkOverride 900 true;
          "unix-compat".components.library.planned = lib.mkOverride 900 true;
          "x509-store".components.library.planned = lib.mkOverride 900 true;
          "Win32-network".components.exes."named-pipe-demo".planned = lib.mkOverride 900 true;
          "hydra-cluster".components.library.planned = lib.mkOverride 900 true;
          "vector-algorithms".components.library.planned = lib.mkOverride 900 true;
          "blaze-builder".components.library.planned = lib.mkOverride 900 true;
          "asn1-types".components.library.planned = lib.mkOverride 900 true;
          "cardano-data".components.library.planned = lib.mkOverride 900 true;
          "hydra-cluster".components.exes."log-filter".planned = lib.mkOverride 900 true;
          "setenv".components.library.planned = lib.mkOverride 900 true;
          "generic-random".components.library.planned = lib.mkOverride 900 true;
          "lifted-base".components.library.planned = lib.mkOverride 900 true;
          "lazysmallcheck".components.library.planned = lib.mkOverride 900 true;
          "criterion-measurement".components.library.planned = lib.mkOverride 900 true;
          "unliftio-core".components.library.planned = lib.mkOverride 900 true;
          "wl-pprint-text".components.library.planned = lib.mkOverride 900 true;
          "data-default-instances-containers".components.library.planned = lib.mkOverride 900 true;
          "safe".components.library.planned = lib.mkOverride 900 true;
          "constraints".components.library.planned = lib.mkOverride 900 true;
          "byron-spec-ledger".components.library.planned = lib.mkOverride 900 true;
          "yaml".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus".components.library.planned = lib.mkOverride 900 true;
          "indexed-traversable".components.library.planned = lib.mkOverride 900 true;
          "network-uri".components.library.planned = lib.mkOverride 900 true;
          "recursion-schemes".components.library.planned = lib.mkOverride 900 true;
          "Stream".components.library.planned = lib.mkOverride 900 true;
          "criterion".components.library.planned = lib.mkOverride 900 true;
          "katip".components.library.planned = lib.mkOverride 900 true;
          "wai-logger".components.setup.planned = lib.mkOverride 900 true;
          "streaming-binary".components.library.planned = lib.mkOverride 900 true;
          "regex-posix".components.library.planned = lib.mkOverride 900 true;
          "statistics-linreg".components.library.planned = lib.mkOverride 900 true;
          "code-page".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus-byron".components.library.planned = lib.mkOverride 900 true;
          "hedgehog-quickcheck".components.library.planned = lib.mkOverride 900 true;
          "crypto-pubkey-types".components.library.planned = lib.mkOverride 900 true;
          "memory".components.library.planned = lib.mkOverride 900 true;
          "pem".components.library.planned = lib.mkOverride 900 true;
          "typed-process".components.library.planned = lib.mkOverride 900 true;
          "base-compat-batteries".components.library.planned = lib.mkOverride 900 true;
          "newtype".components.library.planned = lib.mkOverride 900 true;
          "typed-protocols-cborg".components.library.planned = lib.mkOverride 900 true;
          "dictionary-sharing".components.library.planned = lib.mkOverride 900 true;
          "time-units".components.library.planned = lib.mkOverride 900 true;
          "microlens-th".components.library.planned = lib.mkOverride 900 true;
          "tasty-hunit".components.library.planned = lib.mkOverride 900 true;
          "split".components.library.planned = lib.mkOverride 900 true;
          "contravariant".components.library.planned = lib.mkOverride 900 true;
          "appar".components.library.planned = lib.mkOverride 900 true;
          "optparse-applicative-fork".components.library.planned = lib.mkOverride 900 true;
          "monad-supply".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus-cardano".components.exes."db-analyser".planned = lib.mkOverride 900 true;
          "th-utilities".components.library.planned = lib.mkOverride 900 true;
          "typed-protocols".components.library.planned = lib.mkOverride 900 true;
          "zlib-bindings".components.library.planned = lib.mkOverride 900 true;
          "syb".components.library.planned = lib.mkOverride 900 true;
          "vector-th-unbox".components.library.planned = lib.mkOverride 900 true;
          "hspec".components.library.planned = lib.mkOverride 900 true;
          "criterion".components.exes."criterion-report".planned = lib.mkOverride 900 true;
          "cardano-binary".components.library.planned = lib.mkOverride 900 true;
          "text-short".components.library.planned = lib.mkOverride 900 true;
          "entropy".components.library.planned = lib.mkOverride 900 true;
          "hydra-tui".components.exes."hydra-tui".planned = lib.mkOverride 900 true;
          "assoc".components.library.planned = lib.mkOverride 900 true;
          "process".components.library.planned = lib.mkOverride 900 true;
          "http-date".components.library.planned = lib.mkOverride 900 true;
          "hspec-discover".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-shelley".components.library.planned = lib.mkOverride 900 true;
          "binary-orphans".components.library.planned = lib.mkOverride 900 true;
          "tf-random".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter".components.library.planned = lib.mkOverride 900 true;
          "transformers-except".components.library.planned = lib.mkOverride 900 true;
          "clock".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.sublibs."index-envs".planned = lib.mkOverride 900 true;
          "optics-extra".components.library.planned = lib.mkOverride 900 true;
          "streaming".components.library.planned = lib.mkOverride 900 true;
          "cardano-prelude-test".components.library.planned = lib.mkOverride 900 true;
          "template-haskell".components.library.planned = lib.mkOverride 900 true;
          "fingertree".components.library.planned = lib.mkOverride 900 true;
          "versions".components.library.planned = lib.mkOverride 900 true;
          "blaze-markup".components.library.planned = lib.mkOverride 900 true;
          "aeson-pretty".components.library.planned = lib.mkOverride 900 true;
          "th-lift".components.library.planned = lib.mkOverride 900 true;
          "insert-ordered-containers".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-alonzo".components.library.planned = lib.mkOverride 900 true;
          "libyaml".components.library.planned = lib.mkOverride 900 true;
          "stm".components.library.planned = lib.mkOverride 900 true;
          "ghci".components.library.planned = lib.mkOverride 900 true;
          "matrix".components.library.planned = lib.mkOverride 900 true;
          "monoidal-containers".components.library.planned = lib.mkOverride 900 true;
          "deque".components.library.planned = lib.mkOverride 900 true;
          "retry".components.library.planned = lib.mkOverride 900 true;
          "byteorder".components.library.planned = lib.mkOverride 900 true;
          "dom-lt".components.library.planned = lib.mkOverride 900 true;
          "witherable".components.library.planned = lib.mkOverride 900 true;
          "lens-aeson".components.library.planned = lib.mkOverride 900 true;
          "vty".components.exes."vty-mode-demo".planned = lib.mkOverride 900 true;
          "openapi3".components.exes."example".planned = lib.mkOverride 900 true;
          "system-filepath".components.setup.planned = lib.mkOverride 900 true;
          "asn1-encoding".components.library.planned = lib.mkOverride 900 true;
          "semialign".components.library.planned = lib.mkOverride 900 true;
          "erf".components.library.planned = lib.mkOverride 900 true;
          "cardano-crypto-test".components.library.planned = lib.mkOverride 900 true;
          "selective".components.library.planned = lib.mkOverride 900 true;
          "generics-sop".components.library.planned = lib.mkOverride 900 true;
          "http-client".components.library.planned = lib.mkOverride 900 true;
          "async".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-network-framework".components.sublibs."testlib".planned = lib.mkOverride 900 true;
          "http-media".components.library.planned = lib.mkOverride 900 true;
          "ghc-boot".components.library.planned = lib.mkOverride 900 true;
          "word8".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-byron-test".components.library.planned = lib.mkOverride 900 true;
          "openapi3".components.library.planned = lib.mkOverride 900 true;
          "microlens-mtl".components.library.planned = lib.mkOverride 900 true;
          "plutus-tx".components.library.planned = lib.mkOverride 900 true;
          "tasty-hedgehog".components.library.planned = lib.mkOverride 900 true;
          "http-conduit".components.library.planned = lib.mkOverride 900 true;
          "cabal-doctest".components.library.planned = lib.mkOverride 900 true;
          "iproute".components.library.planned = lib.mkOverride 900 true;
          "hydra-cardano-api".components.library.planned = lib.mkOverride 900 true;
          "wl-pprint-annotated".components.library.planned = lib.mkOverride 900 true;
          "writer-cps-mtl".components.library.planned = lib.mkOverride 900 true;
          "wai-logger".components.library.planned = lib.mkOverride 900 true;
          "th-compat".components.library.planned = lib.mkOverride 900 true;
          "cardano-crypto".components.library.planned = lib.mkOverride 900 true;
          "tls".components.library.planned = lib.mkOverride 900 true;
          "vty".components.library.planned = lib.mkOverride 900 true;
          "plutus-cbor".components.tests."unit".planned = lib.mkOverride 900 true;
          "hpc".components.library.planned = lib.mkOverride 900 true;
          "http-types".components.library.planned = lib.mkOverride 900 true;
          "generic-monoid".components.library.planned = lib.mkOverride 900 true;
          "lens".components.library.planned = lib.mkOverride 900 true;
          "small-steps-test".components.library.planned = lib.mkOverride 900 true;
          "network-mux".components.library.planned = lib.mkOverride 900 true;
          "logict".components.library.planned = lib.mkOverride 900 true;
          "atomic-primops".components.library.planned = lib.mkOverride 900 true;
          "hydra-plutus".components.exes."inspect-script".planned = lib.mkOverride 900 true;
          "writer-cps-transformers".components.library.planned = lib.mkOverride 900 true;
          "loop".components.library.planned = lib.mkOverride 900 true;
          "gray-code".components.library.planned = lib.mkOverride 900 true;
          "hydra-test-utils".components.tests."hydra-test-util-tests".planned = lib.mkOverride 900 true;
          "wcwidth".components.library.planned = lib.mkOverride 900 true;
          "QuickCheck".components.library.planned = lib.mkOverride 900 true;
          "hydra-node".components.library.planned = lib.mkOverride 900 true;
          "ansi-wl-pprint".components.library.planned = lib.mkOverride 900 true;
          "uuid-types".components.library.planned = lib.mkOverride 900 true;
          "req".components.library.planned = lib.mkOverride 900 true;
          "process-extras".components.library.planned = lib.mkOverride 900 true;
          "io-classes".components.library.planned = lib.mkOverride 900 true;
          "monoidal-synchronisation".components.library.planned = lib.mkOverride 900 true;
          "ap-normalize".components.library.planned = lib.mkOverride 900 true;
          "semigroupoids".components.library.planned = lib.mkOverride 900 true;
          "x509-validation".components.library.planned = lib.mkOverride 900 true;
          "genvalidity".components.library.planned = lib.mkOverride 900 true;
          "hydra-tui".components.tests."tests".planned = lib.mkOverride 900 true;
          "quickcheck-dynamic".components.library.planned = lib.mkOverride 900 true;
          "ghc-heap".components.library.planned = lib.mkOverride 900 true;
          "filelock".components.library.planned = lib.mkOverride 900 true;
          "wai-app-static".components.exes."warp".planned = lib.mkOverride 900 true;
          "attoparsec".components.library.planned = lib.mkOverride 900 true;
          "algebraic-graphs".components.library.planned = lib.mkOverride 900 true;
          "vector-map".components.library.planned = lib.mkOverride 900 true;
          "data-default-instances-dlist".components.library.planned = lib.mkOverride 900 true;
          "haskell-lexer".components.library.planned = lib.mkOverride 900 true;
          "hspec-golden-aeson".components.library.planned = lib.mkOverride 900 true;
          "bech32".components.exes."bech32".planned = lib.mkOverride 900 true;
          "plutus-core".components.library.planned = lib.mkOverride 900 true;
          "cardano-crypto-tests".components.library.planned = lib.mkOverride 900 true;
          "wai-websockets".components.library.planned = lib.mkOverride 900 true;
          "quickcheck-arbitrary-adt".components.library.planned = lib.mkOverride 900 true;
          "mtl".components.library.planned = lib.mkOverride 900 true;
          "dependent-sum".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."pir".planned = lib.mkOverride 900 true;
          "plutus-tx-plugin".components.library.planned = lib.mkOverride 900 true;
          "plutus-merkle-tree".components.library.planned = lib.mkOverride 900 true;
          "iohk-monitoring".components.library.planned = lib.mkOverride 900 true;
          "unbounded-delays".components.library.planned = lib.mkOverride 900 true;
          "protolude".components.library.planned = lib.mkOverride 900 true;
          "plutus-ledger-api".components.library.planned = lib.mkOverride 900 true;
          "statistics".components.library.planned = lib.mkOverride 900 true;
          "vault".components.library.planned = lib.mkOverride 900 true;
          "th-abstraction".components.library.planned = lib.mkOverride 900 true;
          "RSA".components.library.planned = lib.mkOverride 900 true;
          "cardano-ledger-shelley-test".components.library.planned = lib.mkOverride 900 true;
          "parsers".components.library.planned = lib.mkOverride 900 true;
          "random-shuffle".components.library.planned = lib.mkOverride 900 true;
          "cassava".components.library.planned = lib.mkOverride 900 true;
          "hydraw".components.library.planned = lib.mkOverride 900 true;
          "pretty-simple".components.exes."pretty-simple".planned = lib.mkOverride 900 true;
          "transformers".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter-configurable".components.library.planned = lib.mkOverride 900 true;
          "wai-app-static".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-network-framework".components.exes."demo-connection-manager".planned = lib.mkOverride 900 true;
          "constraints-extras".components.library.planned = lib.mkOverride 900 true;
          "hkd".components.library.planned = lib.mkOverride 900 true;
          "OneTuple".components.library.planned = lib.mkOverride 900 true;
          "hydra-plutus".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-network".components.exes."demo-chain-sync".planned = lib.mkOverride 900 true;
          "th-lift-instances".components.library.planned = lib.mkOverride 900 true;
          "parsec".components.library.planned = lib.mkOverride 900 true;
          "deepseq".components.library.planned = lib.mkOverride 900 true;
          "hydra-cluster".components.exes."hydra-cluster".planned = lib.mkOverride 900 true;
          "primitive".components.library.planned = lib.mkOverride 900 true;
          "cardano-crypto-praos".components.library.planned = lib.mkOverride 900 true;
          "old-locale".components.library.planned = lib.mkOverride 900 true;
          "lifted-async".components.library.planned = lib.mkOverride 900 true;
          "conduit".components.library.planned = lib.mkOverride 900 true;
          "QuickCheck-GenT".components.library.planned = lib.mkOverride 900 true;
          "microstache".components.library.planned = lib.mkOverride 900 true;
          "xml-conduit".components.library.planned = lib.mkOverride 900 true;
          "text".components.library.planned = lib.mkOverride 900 true;
          "reducers".components.library.planned = lib.mkOverride 900 true;
          "partial-order".components.library.planned = lib.mkOverride 900 true;
          "formatting".components.library.planned = lib.mkOverride 900 true;
          "bifunctors".components.library.planned = lib.mkOverride 900 true;
          "dependent-map".components.library.planned = lib.mkOverride 900 true;
          "unordered-containers".components.library.planned = lib.mkOverride 900 true;
          "random".components.library.planned = lib.mkOverride 900 true;
          "base".components.library.planned = lib.mkOverride 900 true;
          "kan-extensions".components.library.planned = lib.mkOverride 900 true;
          "regex-tdfa".components.library.planned = lib.mkOverride 900 true;
          "integer-logarithms".components.library.planned = lib.mkOverride 900 true;
          "digest".components.library.planned = lib.mkOverride 900 true;
          "io-streams".components.library.planned = lib.mkOverride 900 true;
          "Glob".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus-protocol".components.sublibs."ouroboros-consensus-protocol-test".planned = lib.mkOverride 900 true;
          "integer-gmp".components.library.planned = lib.mkOverride 900 true;
          "tasty".components.library.planned = lib.mkOverride 900 true;
          "polyparse".components.library.planned = lib.mkOverride 900 true;
          "transformers-compat".components.library.planned = lib.mkOverride 900 true;
          "validity".components.library.planned = lib.mkOverride 900 true;
          "dns".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus-byron-test".components.library.planned = lib.mkOverride 900 true;
          "optparse-generic".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."plc".planned = lib.mkOverride 900 true;
          "monad-control".components.library.planned = lib.mkOverride 900 true;
          "base-deriving-via".components.library.planned = lib.mkOverride 900 true;
          "contra-tracer".components.library.planned = lib.mkOverride 900 true;
          "streaming-commons".components.library.planned = lib.mkOverride 900 true;
          "colour".components.library.planned = lib.mkOverride 900 true;
          "streaming-bytestring".components.library.planned = lib.mkOverride 900 true;
          "containers".components.library.planned = lib.mkOverride 900 true;
          "th-reify-many".components.library.planned = lib.mkOverride 900 true;
          "plutus-cbor".components.benchmarks."bench".planned = lib.mkOverride 900 true;
          "time-compat".components.library.planned = lib.mkOverride 900 true;
          "base58-bytestring".components.library.planned = lib.mkOverride 900 true;
          "basement".components.library.planned = lib.mkOverride 900 true;
          "optparse-applicative".components.library.planned = lib.mkOverride 900 true;
          "validity-scientific".components.library.planned = lib.mkOverride 900 true;
          "ouroboros-consensus-byronspec".components.library.planned = lib.mkOverride 900 true;
          "network-mux".components.exes."cardano-ping".planned = lib.mkOverride 900 true;
          "aeson".components.library.planned = lib.mkOverride 900 true;
          "x509-system".components.library.planned = lib.mkOverride 900 true;
          "xml-conduit".components.setup.planned = lib.mkOverride 900 true;
          "ekg-core".components.library.planned = lib.mkOverride 900 true;
          "hspec-expectations".components.library.planned = lib.mkOverride 900 true;
          "hourglass".components.library.planned = lib.mkOverride 900 true;
          "hydra-test-utils".components.library.planned = lib.mkOverride 900 true;
          "base-compat".components.library.planned = lib.mkOverride 900 true;
          "hostname".components.library.planned = lib.mkOverride 900 true;
          "string-conv".components.library.planned = lib.mkOverride 900 true;
          "base64-bytestring".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."traceToStacks".planned = lib.mkOverride 900 true;
          "hashable".components.library.planned = lib.mkOverride 900 true;
          "semigroups".components.library.planned = lib.mkOverride 900 true;
          "auto-update".components.library.planned = lib.mkOverride 900 true;
          "byron-spec-chain".components.library.planned = lib.mkOverride 900 true;
          "warp".components.library.planned = lib.mkOverride 900 true;
          "plutus-merkle-tree".components.tests."unit".planned = lib.mkOverride 900 true;
          "easy-file".components.library.planned = lib.mkOverride 900 true;
          "base16".components.library.planned = lib.mkOverride 900 true;
          "say".components.library.planned = lib.mkOverride 900 true;
          "conduit-extra".components.library.planned = lib.mkOverride 900 true;
          "terminfo".components.library.planned = lib.mkOverride 900 true;
          "non-integral".components.library.planned = lib.mkOverride 900 true;
          "connection".components.library.planned = lib.mkOverride 900 true;
          "void".components.library.planned = lib.mkOverride 900 true;
          "Only".components.library.planned = lib.mkOverride 900 true;
          "crypto-api".components.library.planned = lib.mkOverride 900 true;
          "testing-type-modifiers".components.library.planned = lib.mkOverride 900 true;
          };
        })
    ];
  }