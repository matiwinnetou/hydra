"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[8667],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,h=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8217:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:10},o="Profiling Hydra scripts",l={unversionedId:"profiling",id:"profiling",title:"Profiling Hydra scripts",description:"This is a quick tutorial how to profile Hydra scripts and is intended for",source:"@site/benchmarks/profiling.md",sourceDirName:".",slug:"/profiling",permalink:"/head-protocol/benchmarks/profiling",editUrl:"https://github.com/input-output-hk/hydra/tree/master/docs/benchmarks/profiling.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"defaultSidebar",previous:{title:"Transactions Costs",permalink:"/head-protocol/benchmarks/transaction-cost"},next:{title:"Test Results for hydra-cluster",permalink:"/head-protocol/benchmarks/tests/hydra-cluster/hspec-results"}},p={},s=[{value:"Isolate a transaction to profile",id:"isolate-a-transaction-to-profile",level:2},{value:"Compiling a script for profiling",id:"compiling-a-script-for-profiling",level:2},{value:"Acquiring an executable script",id:"acquiring-an-executable-script",level:2},{value:"Running the script &amp; analysing the results",id:"running-the-script--analysing-the-results",level:2}],c={toc:s};function u(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"profiling-hydra-scripts"},"Profiling Hydra scripts"),(0,r.kt)("p",null,"This is a quick tutorial how to profile Hydra scripts and is intended for\ncontributors to the ",(0,r.kt)("inlineCode",{parentName:"p"},"hydra-node"),"."),(0,r.kt)("p",null,"On every PR and also for the latest ",(0,r.kt)("inlineCode",{parentName:"p"},"master"),", we do compute typical transaction\ncosts in size, memory and cpu usage of the Hydra protocol transactions on\nCardano. The latest results can be seen\n",(0,r.kt)("a",{parentName:"p",href:"https://hydra.family/head-protocol/benchmarks/transaction-cost/"},"here"),"."),(0,r.kt)("p",null,'Such benchmarks provide a great overview of what "fits" into a given transaction\nin terms of maximum transaction size, percent of maximum memory and cpu budget.\nFor the latter, we evaluates ',(0,r.kt)("em",{parentName:"p"},"all")," the scripts which will run in a given\ntransaction."),(0,r.kt)("p",null,"To get more detailed insights of ",(0,r.kt)("em",{parentName:"p"},"what exactly")," is resulting in excessive memory\nor cpu usage, we need to profile the scripts as they are validating a\ntransaction."),(0,r.kt)("p",null,"This guide follows the instructions provided upstream by the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/plutus"},(0,r.kt)("inlineCode",{parentName:"a"},"plutus"))," project\n",(0,r.kt)("a",{parentName:"p",href:"https://plutus.readthedocs.io/en/latest/howtos/profiling-scripts.html"},"here"),",\nbut points out how this can be done in the ",(0,r.kt)("inlineCode",{parentName:"p"},"hydra")," code base."),(0,r.kt)("h2",{id:"isolate-a-transaction-to-profile"},"Isolate a transaction to profile"),(0,r.kt)("p",null,"To do any measurements, we need to isolate the actual cardano ",(0,r.kt)("inlineCode",{parentName:"p"},"Tx")," which is to\nbe profiled. For example, let's investigate what the ",(0,r.kt)("inlineCode",{parentName:"p"},"collectCom")," transaction\nfor ",(0,r.kt)("inlineCode",{parentName:"p"},"5")," parties in the ",(0,r.kt)("inlineCode",{parentName:"p"},"tx-cost")," benchmark is spending most time and memory on."),(0,r.kt)("p",null,"The benchmark computes many transactions with growing number of participants in ",(0,r.kt)("inlineCode",{parentName:"p"},"computeCollectComCost"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"computeCollectComCost =\n  catMaybes <$> mapM compute [1 .. 100]\n where\n  compute numParties = do\n    (st, tx) <- generate $ genCollectComTx numParties\n    let utxo = getKnownUTxO st\n    case checkSizeAndEvaluate tx utxo of\n      -- [...]\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"tx"),' here would be the transaction we want to profile, so we can "isolate"\nthe transaction for ',(0,r.kt)("inlineCode",{parentName:"p"},"5")," parties by changing the body of this function ",(0,r.kt)("inlineCode",{parentName:"p"},"maybe []\npure <$> compute 5"),"."),(0,r.kt)("h2",{id:"compiling-a-script-for-profiling"},"Compiling a script for profiling"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"collectCom")," transaction runs ",(0,r.kt)("inlineCode",{parentName:"p"},"vCommit")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"vHead")," validator scripts, so we\nneed to add"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{-# OPTIONS_GHC -fplugin-opt PlutusTx.Plugin:profile-all #-}\n")),(0,r.kt)("p",null,"to the corresponding modules ",(0,r.kt)("a",{parentName:"p",href:"https://hydra.family/head-protocol/haddock/hydra-plutus/Hydra-Contract-Commit.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Hydra.Contract.Commit"))," and\n",(0,r.kt)("a",{parentName:"p",href:"https://hydra.family/head-protocol/haddock/hydra-plutus/Hydra-Contract-Head.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Hydra.Contract.Head")),"."),(0,r.kt)("h2",{id:"acquiring-an-executable-script"},"Acquiring an executable script"),(0,r.kt)("p",null,"This can be now achieved using\n",(0,r.kt)("a",{parentName:"p",href:"https://hydra.family/head-protocol/haddock/hydra-node/Hydra-Ledger-Cardano-Evaluate.html#v:prepareTxScripts"},(0,r.kt)("inlineCode",{parentName:"a"},"prepareTxScripts")),".\nWe can use this function to acquire and dump the fully applied scripts from the\ntransaction onto disk."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},'-- [...]\n(st, tx) <- generate $ genCollectComTx numParties\nlet utxo = getKnownUTxO st\nscripts <- either die pure $ prepareTxScripts tx utxo\nforM_ (zip [1 ..] scripts) $ \\(i, s) -> writeFileBS ("scripts-" <> show i <> ".flat") s\n-- [...]\n')),(0,r.kt)("p",null,"After running the corresponding code (",(0,r.kt)("inlineCode",{parentName:"p"},"tx-cost")," in our example), we will be left\nwith ",(0,r.kt)("inlineCode",{parentName:"p"},"scripts-{1,2,3,4,5}.flat")," files in the current directory."),(0,r.kt)("p",null,"Unfortunately it's quite hard to tell them apart, but script sizes should help\nin telling the big ",(0,r.kt)("inlineCode",{parentName:"p"},"vHead")," script apart from the smaller ",(0,r.kt)("inlineCode",{parentName:"p"},"vCommit")," script. In\nthe profile, names of original ",(0,r.kt)("inlineCode",{parentName:"p"},"plutus-tx")," functions will be retained so that\nshould make it clear at the latest."),(0,r.kt)("h2",{id:"running-the-script--analysing-the-results"},"Running the script & analysing the results"),(0,r.kt)("p",null,"The tools for this step can be acquired using nix (or alternatively compile the\nupstream projects and use your distribution's package manager):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"nix shell nixpkgs#flamegraph github:input-output-hk/plutus#x86_64-linux.plutus.library.plutus-project-924.hsPkgs.plutus-core.components.exes.traceToStacks github:input-output-hk/plutus#x86_64-linux.plutus.library.plutus-project-924.hsPkgs.plutus-core.components.exes.uplc\n")),(0,r.kt)("p",null,"To produce the profile log as explained upstream we need to use a different\ninput format as ",(0,r.kt)("inlineCode",{parentName:"p"},"prepareTxScripts")," retains the original name annotations."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"uplc evaluate -t -i scripts-1.flat --if flat-namedDeBruijn --trace-mode LogsWithBudgets -o logs\n")),(0,r.kt)("p",null,"This should have produced ",(0,r.kt)("inlineCode",{parentName:"p"},"logs")," file. If not, double check that you have\ncompiled the script with profiling options via the language pragma above."),(0,r.kt)("p",null,"At this stage, we can inspect the logs or produce the flamegraph SVGs exactly as\ndescribed in the original tutorial:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cat logs | traceToStacks | flamegraph.pl > cpu.svg\ncat logs | traceToStacks --column 2 | flamegraph.pl > mem.svg\n")),(0,r.kt)("p",null,"Here, for example the memory profile of a ",(0,r.kt)("inlineCode",{parentName:"p"},"5")," party ",(0,r.kt)("inlineCode",{parentName:"p"},"collectCom")," at the time of\nwriting:"),(0,r.kt)("p",null,(0,r.kt)("img",{loading:"lazy",src:n(8775).Z,width:"1200",height:"342"})),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Open the SVG in a browser to search and drill-down through the profile\ninteractively."))))}u.isMDXComponent=!0},8775:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/profile-mem-1962b88f74167af737797653b64ca737.svg"}}]);